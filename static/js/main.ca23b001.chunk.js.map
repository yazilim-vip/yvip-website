{"version":3,"sources":["component/vipIcon/VipIcon.tsx","component/customNavbar/CustomNavbar.tsx","component/personCard/PersonCard.tsx","component/portfolioCard/PortfolioCard.tsx","component/pageLayout/PageLayout.tsx","component/howToArchive/HowToArchiveConstants.tsx","component/howToArchive/child/FileManager.tsx","component/howToArchive/child/PathBreadcrumb.tsx","component/howToArchive/child/HowToPanel.tsx","component/howToArchive/child/ViewModeChanger.tsx","component/howToArchive/util/createSearchIndex.tsx","component/howToArchive/util/parsePathAndSetContent.tsx","component/howToArchive/model/Category.tsx","component/howToArchive/model/HowTo.tsx","component/howToArchive/HowToArchive.tsx","component/howToArchive/util/searchArchive.tsx","component/tooltipElement/TooltipElement.tsx","page/home/Home.tsx","constants/memberList.tsx","constants/projectPortfolioList.tsx","page/portfolio/Portfolio.tsx","util/Firebase.tsx","redux/actions.tsx","page/howTo/HowTo.tsx","component/howToArchive/util/json2CategoryMapper.tsx","page/about/About.tsx","page/notFound/NotFound.tsx","redux/howToReducer.tsx","redux/configureStore.tsx","App.tsx","index.tsx"],"names":["VipIcon","iconCode","className","link","divClassName","href","target","rel","icon","CustomNavbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","alt","src","width","Toggle","aria-controls","Collapse","id","Nav","exact","activeClassName","to","PersonCard","name","title","description","imageSource","links","cvSource","Card","Img","style","Body","Title","Subtitle","Text","Button","faFile","Footer","Object","entries","map","linkMap","url","PortfolioCard","PageLayout","props","Col","md","span","height","Row","children","defaultProps","offset","HOWTO_ITEM_TYPE","FileManager","viewMode","categoryList","howToList","renderItems","items","keys","key","howToItem","howToItemType","type","faFolder","faFileAlt","color","path","ListGroup","Item","xs","sm","lg","placement","tooltipElement","size","categoryItems","howToItems","Container","fluid","PathBreadcrumb","getLink","index","slice","join","breadcrumbItems","item","Breadcrumb","active","length","linkAs","Link","linkProps","faHome","HowToPanel","howTo","folderLink","label","overlayClassName","isOpen","source","markdownContent","from","closeIcon","faAngleDown","onRequestClose","ViewModeChanger","viewModeToggleEventHandler","ButtonGroup","toggle","ToggleButton","value","checked","onChange","faTh","faThList","indexContent","data","arr","howtoList","subCategoryList","forEach","toLowerCase","push","subCategory","newPath","setContent","rootCategory","categoryNames","selectedHowtoName","tmpCategory","shift","cat","selectedCategory","selectedHowto","hasOwnProperty","categoryHits","howtoHits","Category","category","this","HowTo","filePath","HowToArchive","errMsg","requestedPath","useState","searchResult","setSearchResult","searchIndex","createSearchIndex","initialViewMode","parsedUrl","rootCategorySelectedFlag","split","howtoSelectedFlag","endsWith","pop","selectedCategoryName","folderPath","parsedContent","categoryFoundFlag","howToFoundFlag","howToNotFoundFlag","parsePathAndSetContent","beutifiedPath","replace","Alert","Badge","pill","query","disabled","pointerEvents","faStar","FormControl","placeholder","aria-label","event","searchQuery","hits","filter","o","includes","hit","searchArchive","catName","getFileMagnerCategoryItemList","howToName","getFileMagnerHowToItemList","TooltipElement","OverlayTrigger","overlay","Tooltip","Home","TEAM_MEMBER_LIST","undefined","gitlab","github","medium","linkedin","PORTFOLIO_LIST","bitbucket","microsoft","Portfolio","CardColumns","portfolio","Firebase","firebase","initializeApp","databaseURL","projectId","REDUX_ACTION_TYPES","REDUX_ACTION_CREATORS","toggleFmViewMode","mapDispatchToProps","connect","state","howtoReducer","fileManagerViewMode","howToData","setHowToData","errorFlag","setErrorFlag","errorMessage","setErrorMessage","loadedFlag","setLoadedFlag","useEffect","fetchHowtoData","database","ref","on","snapshot","exists","val","JSON","parse","json2CategoryMapper","mockData","categoryObj","stringify","sc","addSubCategory","ht","howto","addHowTo","error","renderInfoPage","content","Date","Spinner","animation","memberToComponent","tm","About","NotFound","data-text","howToReducer","action","LOCATION_CHANGE","payload","location","pathname","newViewMode","prevViewMode","persistConfig","storage","whitelist","history","createBrowserHistory","createRootReducer","combineReducers","router","connectRouter","persistReducer","library","add","fab","fas","far","App","component","faEnvelope","preloadedState","middlewares","routerMiddleware","middlewareEnhancer","applyMiddleware","enhancers","composedEnhancers","composeWithDevTools","persistedRootReducer","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById","WebFont","load","google","families"],"mappings":"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","file":"static/js/main.ca23b001.chunk.js","sourcesContent":["import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './VipIcon.scss'\nimport { IconName } from '@fortawesome/fontawesome-svg-core'\n\nexport interface VipIconProps {\n    iconCode: IconName\n    className: string | undefined\n    link: string | undefined\n}\n\nexport const VipIcon = ({ iconCode, className, link }: VipIconProps) => {\n    const divClassName = `d-inline-block yvip-icon ${iconCode} ${className}`\n    return (\n        <div className={divClassName}>\n            <a href={link} target='_blank' rel='noopener noreferrer'>\n                <FontAwesomeIcon icon={['fab', iconCode]} className='mr-3' />\n            </a>\n        </div>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport './CustomNavbar.scss'\n\n// Project Components\nimport { VipIcon } from '../vipIcon/VipIcon'\n\nexport const CustomNavbar = () => {\n    return (\n        <Navbar\n            collapseOnSelect\n            expand='lg'\n            bg='dark'\n            variant='dark'\n            className='text-center'\n        >\n            <div className='animate__animated animate__flipInX'>\n                <Navbar.Brand className='my-2'>\n                    <a href='/'>\n                        <img alt='' src='/logo.svg' width='220' />\n                    </a>\n                </Navbar.Brand>\n            </div>\n            <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n            <Navbar.Collapse id='responsive-navbar-nav'>\n                <Nav className='mx-auto page-nav'>\n                    <NavLink\n                        exact\n                        activeClassName='active'\n                        className='text-light nav-link'\n                        to='/'\n                    >\n                        Home\n                    </NavLink>\n\n                    <NavLink\n                        activeClassName='active'\n                        className='text-light nav-link'\n                        to='/portfolio'\n                    >\n                        Portfolio\n                    </NavLink>\n\n                    <NavLink\n                        activeClassName='active'\n                        className='text-light nav-link'\n                        to='/howto'\n                    >\n                        HowTo\n                    </NavLink>\n\n                    <NavLink\n                        activeClassName='active'\n                        className='text-light nav-link'\n                        to='/about'\n                    >\n                        About\n                    </NavLink>\n                </Nav>\n                <Nav>\n                    <span className='text-light nav-link'>\n                        <VipIcon\n                            iconCode='gitlab'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://gitlab.com/yazilim.vip'\n                        />\n                        <VipIcon\n                            iconCode='github'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://github.com/yazilim-vip'\n                        />\n                        <VipIcon\n                            iconCode='bitbucket'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://bitbucket.org/yazilimvip/'\n                        />\n                        <VipIcon\n                            iconCode='docker'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://hub.docker.com/orgs/yazilimvip/repositories'\n                        />\n                        <VipIcon\n                            iconCode='linkedin'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://www.linkedin.com/company/yazilimvip'\n                        />\n                        <VipIcon\n                            iconCode='medium'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://medium.com/yazilim-vip'\n                        />\n                        <VipIcon\n                            iconCode='discord'\n                            className='animate__animated animate__zoomInLeft'\n                            link=''\n                        />\n                    </span>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Button, Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { VipIcon } from '..'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFile } from '@fortawesome/free-solid-svg-icons'\n\nexport interface PersonCardProps {\n    name: string\n    title: string\n    description: string | JSX.Element\n    imageSource: string\n    links: Object | undefined\n    cvSource: string | undefined\n}\n\nexport const PersonCard = ({\n    name,\n    title,\n    description,\n    imageSource,\n    links,\n    cvSource\n}: PersonCardProps) => {\n    const linkToIcon = (linkMap: any) => {\n        const iconCode = linkMap[0]\n        const url = linkMap[1]\n        return (\n            <span className='text-muted portfolio-link'>\n                <VipIcon iconCode={iconCode} link={url} className={'null'} />\n            </span>\n        )\n    }\n\n    return (\n        <Card className='portfolio-card shadow'>\n            {imageSource && (\n                <Card.Img\n                    className='mx-auto mt-2 border border-secondary'\n                    style={{\n                        width: '70%'\n                    }}\n                    variant='top'\n                    src={`${imageSource}`}\n                />\n            )}\n\n            <Card.Body>\n                <div className='text-center mb-3'>\n                    <Card.Title>{name}</Card.Title>\n                    <Card.Subtitle className='text-muted'>\n                        {title}\n                    </Card.Subtitle>\n                </div>\n\n                <div id='example-collapse-text'>\n                    <Card.Text className='border-top pt-3'>\n                        {description}\n                    </Card.Text>\n                </div>\n\n                {cvSource && (\n                    <div className='text-center'>\n                        <hr />\n\n                        <Button\n                            className='d-block'\n                            variant='outline-primary'\n                            href={cvSource}\n                            target='_blank'\n                        >\n                            <FontAwesomeIcon icon={faFile} className='mr-3' />\n                            Curriculum Vitae\n                        </Button>\n                    </div>\n                )}\n            </Card.Body>\n\n            {links && (\n                <Card.Footer className='text-center'>\n                    {Object.entries(links).map(linkToIcon)}\n                </Card.Footer>\n            )}\n        </Card>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { VipIcon } from '../vipIcon/VipIcon'\n\nexport interface PortfolioCardProps {\n    name: string\n    description: string | JSX.Element\n    imageSource: string | undefined\n    links: Object | undefined\n}\n\nexport const PortfolioCard = ({\n    name,\n    description,\n    imageSource,\n    links\n}: PortfolioCardProps) => {\n    const linkToIcon = (linkMap: any) => {\n        const iconCode = linkMap[0]\n        const url = linkMap[1]\n\n        return (\n            <span className='text-muted portfolio-link'>\n                <VipIcon iconCode={iconCode} link={url} className={'null'} />\n            </span>\n        )\n    }\n    return (\n        <Card className='mb-4 portfolio-card shadow'>\n            {imageSource && <Card.Img variant='top' src={`${imageSource}`} />}\n            <Card.Body>\n                <Card.Title>{name}</Card.Title>\n                <Card.Subtitle className='mb-4 text-muted'>\n                    {name}\n                </Card.Subtitle>\n                <Card.Text>{description}</Card.Text>\n            </Card.Body>\n            {links && (\n                <Card.Footer className='text-center'>\n                    {Object.entries(links).map(linkToIcon)}\n                </Card.Footer>\n            )}\n        </Card>\n    )\n}\n\nexport default PortfolioCard\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Col, Row } from 'react-bootstrap'\n\nexport const PageLayout = (props: any) => {\n    return (\n        <Col md={props.span} style={{ height: '100%' }}>\n            <Row>\n                <Col md='12'>{props.children}</Col>\n            </Row>\n        </Col>\n    )\n}\n\nPageLayout.defaultProps = {\n    span: { span: 8, offset: 2 }\n}\n","export const HOWTO_VIEW_MODE_LIST_VIEW = 'list-view'\nexport const HOWTO_VIEW_MODE_GRID_VIEW = 'grid-view'\nexport type FileManagerViewMode =\n    | typeof HOWTO_VIEW_MODE_LIST_VIEW\n    | typeof HOWTO_VIEW_MODE_GRID_VIEW\nexport const HOWTO_DEFAULT_VIEW_MODE: FileManagerViewMode = HOWTO_VIEW_MODE_GRID_VIEW\n\n\nexport const HOWTO_ITEM_TYPE = {\n    HOWTO: 'howto_hit',\n    CATEGORY: 'category_hit'\n}\nexport type HowToItemType =\n    | typeof HOWTO_ITEM_TYPE.HOWTO\n    | typeof HOWTO_ITEM_TYPE.CATEGORY\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileAlt, faFolder } from '@fortawesome/free-solid-svg-icons'\nimport { ListGroup, Container, Col, Row } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport {\n    HOWTO_VIEW_MODE_GRID_VIEW,\n    HOWTO_VIEW_MODE_LIST_VIEW,\n    FileManagerViewMode, HOWTO_ITEM_TYPE\n} from '../HowToArchiveConstants'\nimport { TooltipElement } from '../..'\nimport { HowToItem } from '../model'\n\nexport interface FileManagerItemType {\n    name: string\n    path: string\n}\n\nexport interface FileManagerProps {\n    viewMode: FileManagerViewMode\n    categoryList: Array<HowToItem> | null\n    howToList: Array<HowToItem> | null\n}\n\nexport const FileManager = ({\n    viewMode,\n    categoryList,\n    howToList\n}: FileManagerProps) => {\n    const renderItems = (items: Array<HowToItem> | null) => {\n        if (!items) {\n            return null\n        }\n\n        return Object.keys(items).map((key: any) => {\n            const howToItem = items[key]\n            const howToItemType = howToItem.type\n\n            const icon = howToItemType === HOWTO_ITEM_TYPE.CATEGORY ?  faFolder : faFileAlt\n            const color = howToItemType === HOWTO_ITEM_TYPE.CATEGORY ?  '#50a4d4' : '#494d52'\n\n            const name = howToItem.name\n            const link = howToItem.path\n            if (viewMode === HOWTO_VIEW_MODE_LIST_VIEW) {\n                return (\n                    <Link to={link} className='link' key={link}>\n                        <ListGroup.Item>\n                            <FontAwesomeIcon\n                                icon={icon}\n                                className='mr-3'\n                                color={color}\n                            />\n                            {name}\n                        </ListGroup.Item>\n                    </Link>\n                )\n            } else if (viewMode === HOWTO_VIEW_MODE_GRID_VIEW) {\n                return (\n                    <Col\n                        xs={4}\n                        sm={3}\n                        md={3}\n                        lg={2}\n                        className='py-4 text-center'\n                        key={link}\n                    >\n                        <TooltipElement\n                            placement='bottom-end'\n                            tooltipElement={link}\n                        >\n                            <Link to={link} className='link'>\n                                <FontAwesomeIcon\n                                    icon={icon}\n                                    className='pb-1'\n                                    size='4x'\n                                    color={color}\n                                />\n                                <br />\n                                {name}\n                            </Link>\n                        </TooltipElement>\n                    </Col>\n                )\n            } else {\n                return null\n            }\n        })\n    }\n\n    const categoryItems = renderItems(categoryList)\n    const howToItems = renderItems(howToList)\n    return (\n        <Container fluid>\n            {viewMode === HOWTO_VIEW_MODE_LIST_VIEW && (\n                <ListGroup>\n                    {categoryItems}\n                    {howToItems}\n                </ListGroup>\n            )}\n            {viewMode === HOWTO_VIEW_MODE_GRID_VIEW && (\n                <Row>\n                    {categoryItems}\n                    {howToItems}\n                </Row>\n            )}\n        </Container>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\n\nexport interface PathBreadcrumbProps {\n    items: string[]\n}\n\nexport const PathBreadcrumb = ({ items }: PathBreadcrumbProps) => {\n    const getLink = (index: number) => {\n        return '/howto/' + items.slice(0, index).join('/')\n    }\n\n    const breadcrumbItems = items.map((item, index) => {\n        return (\n            <Breadcrumb.Item\n                key={item}\n                active={index + 1 === items.length}\n                linkAs={Link}\n                linkProps={{ to: getLink(index + 1), className: 'link' }}\n               >\n                {item}\n            </Breadcrumb.Item>\n        )\n    })\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item\n                key='root'\n                linkAs={Link}\n                linkProps={{ to: '/howto', className: 'link' }}\n            >\n                <span>\n                    <FontAwesomeIcon icon={faHome} />\n                </span>\n            </Breadcrumb.Item>\n            {breadcrumbItems}\n        </Breadcrumb>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Link } from 'react-router-dom'\nimport SlidingPane from 'react-sliding-pane'\nimport ReactMarkdown from 'react-markdown'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { PathBreadcrumb } from './PathBreadcrumb'\nimport { HowTo } from '../model'\n\nexport interface HowToPanelProps {\n    howTo: HowTo\n}\nexport const HowToPanel = ({ howTo }: HowToPanelProps) => {\n    const folderLink =\n        howTo.categoryList.length === 0\n            ? '/howto'\n            : `/howto/${howTo.categoryList.join('/')}`\n    const title = (\n        <div>\n            <PathBreadcrumb items={[...howTo.categoryList, howTo.label]} />\n        </div>\n    )\n    return (\n        <SlidingPane\n            className='howto-sliding-pane'\n            overlayClassName='howto-sliding-pane-overlay'\n            isOpen={true}\n            children={<ReactMarkdown source={howTo.markdownContent} />}\n            title={title}\n            width='100'\n            from='bottom'\n            closeIcon={\n                <Link to={folderLink} className='link'>\n                    <FontAwesomeIcon icon={faAngleDown} size='2x' />\n                </Link>\n            }\n            onRequestClose={() => {}}\n        />\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport {\n    ButtonGroup,\n    ToggleButton,\n} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTh, faThList } from '@fortawesome/free-solid-svg-icons'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport {\n    FileManagerViewMode,\n    HOWTO_VIEW_MODE_GRID_VIEW,\n    HOWTO_VIEW_MODE_LIST_VIEW\n} from '../HowToArchiveConstants'\nimport { TooltipElement } from '../..'\n\nexport interface ViewModeChangerProps {\n    viewMode: FileManagerViewMode\n    viewModeToggleEventHandler: () => void\n}\n\nexport const ViewModeChanger = ({\n    viewMode,\n    viewModeToggleEventHandler\n}: ViewModeChangerProps) => {\n    return (\n        <ButtonGroup toggle className='float-right'>\n            <TooltipElement\n                placement='bottom'\n                tooltipElement='Grid View Mode'\n            >\n                <ToggleButton\n                    type='radio'\n                    variant='secondary'\n                    name='radio'\n                    value={viewMode === HOWTO_VIEW_MODE_GRID_VIEW}\n                    checked={viewMode === HOWTO_VIEW_MODE_GRID_VIEW}\n                    onChange={() => viewModeToggleEventHandler()}\n                >\n                    <FontAwesomeIcon icon={faTh} />\n                </ToggleButton>\n            </TooltipElement>\n            <TooltipElement\n                placement='bottom'\n                tooltipElement='List View Mode'\n            >\n            \n                <ToggleButton\n                    type='radio'\n                    variant='secondary'\n                    name='radio'\n                    value={viewMode === HOWTO_VIEW_MODE_LIST_VIEW}\n                    checked={viewMode === HOWTO_VIEW_MODE_LIST_VIEW}\n                    onChange={() => viewModeToggleEventHandler()}\n                >\n                    <FontAwesomeIcon icon={faThList} />\n                </ToggleButton>\n            </TooltipElement>\n        </ButtonGroup>\n    )\n}\n","// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { HOWTO_ITEM_TYPE } from '../HowToArchiveConstants'\n// eslint-disable-next-line no-unused-vars\nimport { HowToItem } from '../model'\n\nexport const createSearchIndex = (rootCategory: any): HowToItem[] => {\n    return indexContent(rootCategory, [], '/howto')\n}\n\nconst indexContent = (\n    data: any,\n    arr: HowToItem[],\n    path: string\n): HowToItem[] => {\n    const howtoList = data.howtoList\n    const subCategoryList = data.subCategoryList\n\n    Object.keys(howtoList).forEach((key) => {\n        const howto = howtoList[key]\n        const name = howto.label\n        const newPath = path + '/' + name\n\n        const howToItem: HowToItem = {\n            path: newPath,\n            type: HOWTO_ITEM_TYPE.HOWTO,\n            name: name.toLowerCase()\n        }\n        arr.push(howToItem)\n    })\n\n    Object.keys(subCategoryList).forEach((key) => {\n        const subCategory = subCategoryList[key]\n        const name = subCategory.name\n        const newPath = path + '/' + name\n\n        const howToItem: HowToItem = {\n            path: newPath,\n            type: HOWTO_ITEM_TYPE.CATEGORY,\n            name: name.toLowerCase()\n        }\n\n        arr.push(howToItem)\n        indexContent(subCategory, arr, newPath)\n    })\n\n    return arr\n}\n","// eslint-disable-next-line no-unused-vars\nimport { ParsedContent, ParsedUrl } from '../model'\n\n/**\n *\n * Example1\n * url: https://www.yazilim.vip/howto\n * path = \"/howto\"\n * categoryNames = []\n * folderPath = \"howto\"\n * selectedCategoryName = \"howto\"\n *\n * Example2\n * url: https://www.yazilim.vip/howto/linux\n * path = \"linux\"\n * categoryNames = [\"linux\"]\n * folderPath = \"howto/linux\"\n * selectedCategoryName = \"linux\"\n *\n * Example3\n * url: https://www.yazilim.vip/howto/linux/specific_distro\n * path = \"/howto/linux/specific_distro\"\n * categoryNames = [\"linux\", \"specific_distro\"]\n * folderPath = \"howto/linux/specific_distro\"\n * selectedCategoryName = \"specific_distro\"\n *\n * Example4\n * url: http://www.yazilim.vip/howto/ide/Eclipse/eclipse-shortcuts_configuration.howto\n * path = \"/howto/ide/Eclipse/eclipse-shortcuts_configuration.howto\"\n * categoryNames = [\"ide, \"Eclipse\"]\n * folderPath = \"howto/ide/Eclipse\"\n * selectedCategoryName = \"Eclipse\"\n * selectedHowtoName = \"eclipse-shortcuts_configuration.howto\"\n */\nexport const parsePathAndSetContent = (\n    rootCategory: any,\n    path: string\n): ParsedUrl => {\n    const rootCategorySelectedFlag: boolean = path === '/howto'\n    const categoryNames = path.slice(1).split('/')\n    const howtoSelectedFlag = path.endsWith('.howto') || path.endsWith('.md')\n    const selectedHowtoName = howtoSelectedFlag ? categoryNames.pop() : null\n    const selectedCategoryName = categoryNames[categoryNames.length - 1]\n    const folderPath = '/' + categoryNames.join('/')\n\n    const parsedContent = setContent(\n        rootCategory,\n        categoryNames,\n        selectedHowtoName\n    )\n\n    const categoryFoundFlag = parsedContent.selectedCategory && true\n    const howToFoundFlag =\n        howtoSelectedFlag && parsedContent.selectedHowto && true\n    const howToNotFoundFlag =\n        howtoSelectedFlag && !parsedContent.selectedHowto && true\n\n    return {\n        folderPath: folderPath,\n        categoryNames: categoryNames,\n        selectedCategoryName: selectedCategoryName,\n        selectedHowtoName: selectedHowtoName,\n        howtoSelectedFlag: howtoSelectedFlag,\n        rootCategorySelectedFlag: rootCategorySelectedFlag,\n        parsedContent: parsedContent,\n        categoryFoundFlag: categoryFoundFlag,\n        howToFoundFlag: howToFoundFlag,\n        howToNotFoundFlag: howToNotFoundFlag\n    }\n}\n\nconst setContent = (\n    rootCategory: any,\n    categoryNames: string[],\n    selectedHowtoName: string | null | undefined\n): ParsedContent => {\n    // set selectedCategory\n    let tmpCategory = rootCategory\n\n    categoryNames.shift() // shift first category (howto), because rootCategory is not wrapped with \"howto\" key\n    for (const cat of categoryNames) {\n        if (!tmpCategory.subCategoryList[cat]) {\n            tmpCategory = null\n            break /// category not exists\n        }\n\n        tmpCategory = tmpCategory.subCategoryList[cat]\n    }\n\n    const selectedCategory = tmpCategory\n\n    // set selectedHowto\n    let selectedHowto = null\n\n    if (\n        selectedHowtoName &&\n        selectedCategory &&\n        //! eslint gives error\n        // eslint-disable-next-line no-prototype-builtins\n        selectedCategory.howtoList.hasOwnProperty(selectedHowtoName)\n    ) {\n        selectedHowto = selectedCategory.howtoList[selectedHowtoName]\n    }\n\n    return {\n        selectedCategory: selectedCategory,\n        selectedHowto: selectedHowto,\n        categoryHits: null,\n        howtoHits: null\n    }\n}\n","import { HowTo } from \"./HowTo\";\n\n\nexport class Category {\n    name = '';\n    subCategoryList: { [s: string]: Category; } = {};\n    howtoList: { [s: string]: HowTo; } = {};\n\n    addSubCategory(category: Category): void {\n        this.subCategoryList[category.name] = category;\n    }\n\n    addHowTo(howTo: HowTo): void {\n        this.howtoList[howTo.label] = howTo;\n    }\n}\n","\nexport class HowTo {\n    categoryList: string[] = [];\n    label = '';\n    filePath = '';\n    markdownContent = '';\n}\n","import React, { useState } from 'react'\n\n// ---------------------------\n//  External Dependencies.\n// ---------------------------\nimport { Link } from 'react-router-dom'\nimport {\n    Alert,\n    Container,\n    Row,\n    Col,\n    FormControl,\n    Badge,\n    Button\n} from 'react-bootstrap'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// ---------------------------\n//  Internal Dependencies.\n// ---------------------------\nimport { Category, HowToItem, SearchResult } from './model'\nimport {\n    PathBreadcrumb,\n    FileManager,\n    HowToPanel,\n    ViewModeChanger\n} from './child'\nimport {\n    FileManagerViewMode,\n    HOWTO_DEFAULT_VIEW_MODE,\n    HOWTO_ITEM_TYPE\n} from './HowToArchiveConstants'\n\nimport './HowToArchive.scss'\nimport {\n    createSearchIndex,\n    parsePathAndSetContent,\n    searchArchive\n} from './util'\n\nimport { TooltipElement } from '../'\n\nexport interface HowToArchiveProps {\n    rootCategory: Category\n    requestedPath: string\n    viewMode: FileManagerViewMode | undefined\n    viewModeToggleEventHandler: () => void\n}\n\nexport const HowToArchive = ({\n    rootCategory,\n    requestedPath,\n    viewMode,\n    viewModeToggleEventHandler\n}: HowToArchiveProps) => {\n    // States\n    const [searchResult, setSearchResult] = useState<SearchResult | null>(null)\n\n    // Constants\n    const searchIndex = createSearchIndex(rootCategory)\n    const initialViewMode = viewMode || HOWTO_DEFAULT_VIEW_MODE\n    const parsedUrl = parsePathAndSetContent(rootCategory, requestedPath)\n\n    // Helper Methdos\n    const showError = (errMsg: string | JSX.Element) => (\n        <Container>\n            <Alert key={1} variant='danger'>\n                {errMsg}\n            </Alert>\n        </Container>\n    )\n\n    if (!parsedUrl.categoryFoundFlag) {\n        const beutifiedPath = parsedUrl.folderPath.replace('/howto/', '')\n        return showError(\n            <>\n                Category <b>{beutifiedPath + ' '}</b>\n                not found in path.\n                <br />\n                <Link to='/howto'>Go to root directory</Link>\n            </>\n        )\n    }\n\n    const selectedCategory = parsedUrl.parsedContent.selectedCategory\n\n    //TODO: move them to util class\n    const getFileMagnerCategoryItemList = (): Array<HowToItem> => {\n        const categoryList = selectedCategory.subCategoryList\n        return Object.keys(categoryList).map((catName) => {\n            const category = categoryList[catName]\n            return {\n                name: category.name,\n                path: `${parsedUrl.folderPath}/${category.name}`,\n                type: HOWTO_ITEM_TYPE.CATEGORY\n            }\n        })\n    }\n    const getFileMagnerHowToItemList = (): Array<HowToItem> => {\n        const howToList = selectedCategory.howtoList\n        return Object.keys(howToList).map((howToName) => {\n            const howTo = howToList[howToName]\n            return {\n                name: howTo.label,\n                path: `${parsedUrl.folderPath}/${howTo.label}`,\n                type: HOWTO_ITEM_TYPE.HOWTO\n            }\n        })\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col md='7'>\n                    <PathBreadcrumb items={parsedUrl.categoryNames} />\n                    {searchResult !== null && (\n                        <div className='search-result-div'>\n                            <span className='mr-3'>Search Result for :</span>\n                            <Badge pill variant='dark'>\n                                {searchResult.query}\n                            </Badge>\n                        </div>\n                    )}\n                </Col>\n                <Col md='2' sm='3' className='mb-2 mb-sm-0'>\n                    <div className='d-flex bd-highlight mb-3'>\n                        <div className='ml-auto mr-4'>\n                            <TooltipElement\n                                placement='bottom'\n                                tooltipElement={\n                                    <>\n                                        List favorited contents <br /> (not\n                                        supported yet)\n                                    </>\n                                }\n                            >\n                                <span className='d-inline-block'>\n                                    <Button\n                                        variant='secondary'\n                                        disabled\n                                        style={{ pointerEvents: 'none' }}\n                                    >\n                                        <FontAwesomeIcon icon={faStar} />\n                                    </Button>\n                                </span>\n                            </TooltipElement>\n                        </div>\n                        <ViewModeChanger\n                            viewMode={initialViewMode}\n                            viewModeToggleEventHandler={\n                                viewModeToggleEventHandler\n                            }\n                        />\n                    </div>\n                </Col>\n                <Col md='3' sm='9'>\n                    <FormControl\n                        type='search'\n                        placeholder='Search...'\n                        aria-label='Search'\n                        value={searchResult === null ? '' : searchResult.query}\n                        onChange={(event) => {\n                            const searchQuery = event.target.value\n                            if (searchQuery) {\n                                const searchResult = searchArchive(\n                                    searchIndex,\n                                    searchQuery\n                                )\n                                setSearchResult(searchResult)\n                            } else {\n                                setSearchResult(null)\n                            }\n                        }}\n                    />\n                </Col>\n            </Row>\n            <hr />\n            {searchResult === null && parsedUrl.howToNotFoundFlag && (\n                <Alert key={1} variant='danger'>\n                    <b>Whopps {parsedUrl.selectedHowtoName}</b> not found in{' '}\n                    <b>{selectedCategory.name}</b> folder.\n                    <br />\n                    <Link to={parsedUrl.folderPath}>\n                        Go to {selectedCategory.name} category\n                    </Link>\n                </Alert>\n            )}\n            <FileManager\n                viewMode={initialViewMode}\n                categoryList={\n                    searchResult !== null\n                        ? searchResult.categoryHits\n                        : getFileMagnerCategoryItemList()\n                }\n                howToList={\n                    searchResult !== null\n                        ? searchResult.howtoHits\n                        : getFileMagnerHowToItemList()\n                }\n            />\n            {parsedUrl.howToFoundFlag && (\n                <HowToPanel howTo={parsedUrl.parsedContent.selectedHowto} />\n            )}\n        </div>\n    )\n}\n","import { HOWTO_ITEM_TYPE } from '../HowToArchiveConstants'\n// eslint-disable-next-line no-unused-vars\nimport { HowToItem, SearchResult } from '../model'\n\nexport const searchArchive = (\n    searchIndex: HowToItem[],\n    query: string\n): SearchResult => {\n    if (!query) {\n        return {\n            query: '',\n            categoryHits: null,\n            howtoHits: null\n        }\n    }\n\n    const hits = searchIndex.filter((o) => o.name.includes(query.toLowerCase()))\n    if (!hits) {\n        return {\n            query: query,\n            categoryHits: null,\n            howtoHits: null\n        }\n    }\n\n    const categoryHits: HowToItem[] = []\n    const howtoHits: HowToItem[] = []\n    hits.forEach((hit: HowToItem) => {\n        if (hit.type === HOWTO_ITEM_TYPE.CATEGORY) {\n            categoryHits.push(hit)\n        } else if (hit.type === HOWTO_ITEM_TYPE.HOWTO) {\n            howtoHits.push(hit)\n        }\n    })\n\n    return {\n        query: query,\n        categoryHits: categoryHits,\n        howtoHits: howtoHits\n    }\n}\n","import React from 'react'\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { Placement } from 'react-bootstrap/esm/Overlay'\n\nexport interface TooltipElementProps {\n    placement: Placement\n    tooltipElement: React.ReactElement | string\n    children: React.ReactElement\n}\n\nexport const TooltipElement = ({\n    placement,\n    tooltipElement,\n    children\n}: TooltipElementProps) => {\n    return (\n        <OverlayTrigger\n            placement={placement}\n            overlay={<Tooltip id='tooltip-disabled'>{tooltipElement}</Tooltip>}\n        >\n            {children}\n        </OverlayTrigger>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { PageLayout } from '../../component'\nimport './Home.scss'\n\nexport const Home = (props: any) => (\n    <PageLayout>\n        <Card className='mb-4 portfolio-card shadow yvip-card'>\n            <div className='yvip-card-img img-responsive img-fluid' />\n            <Card.Body>\n                <Card.Title>\n                    <h1 className='text-center display-4 pb-2'>\n                        Do the right, not the easy.\n                    </h1>\n                </Card.Title>\n\n                <Card.Text>\n                    To keep this platform open to everyone who is competent and\n                    willing to share what we call an open source world. A\n                    platform aimed at presenting our competencies to the open\n                    source world without waiting for a response.\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    </PageLayout>\n)\n","import React from 'react'\nimport { PersonCardProps } from '../component'\n\nexport const TEAM_MEMBER_LIST: PersonCardProps[] = [\n    {\n        name: 'Mehmet Arif Emre Sen',\n        description: (\n            <>\n                <a\n                    className='d-block text-center'\n                    href='https://maemresen.github.io'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <b>Personal Website</b>\n                </a>\n                <hr />\n                <a\n                    className='d-block text-center'\n                    href='https://maemresen.github.io/curriculum-vitae/cv_mehmet_arif_emre_sen.pdf'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <b>CV Link</b>\n                </a>\n            </>\n        ),\n        imageSource: '/img/emre_portrait_cropped.jpeg',\n        cvSource: undefined,\n        title: 'Major Contributor',\n        links: {\n            gitlab: 'https://gitlab.com/emresen',\n            github: 'https://github.com/maemresen',\n            medium: 'https://medium.com/@maemresen',\n            linkedin: 'https://www.linkedin.com/in/maemresen'\n        }\n    },\n    {\n        name: 'Burak Erkan',\n        description: (\n            <div>\n                <span>yazilim.vip patriot</span>\n                <ul>\n                    <li>\n                        2008 - now (software developer & team lead & manager)\n                    </li>\n                    <li>2000 - now (still a software amateur)</li>\n                </ul>\n            </div>\n        ),\n        imageSource: '/img/burak.jpeg',\n        cvSource: undefined,\n        title: 'Major Contributor',\n        links: undefined\n    },\n    {\n        name: 'Mustafa Arif Sisman',\n        title: 'Major Contributor',\n        description: (\n            <>\n                <ul>\n                    <li>\n                        I aim to achieve the most automated and optimized result\n                        possible, following the principles of agile software\n                        development and analytical thinking.\n                    </li>\n                    <li>\n                        I work in the field of artificial intelligence and web\n                        technologies, I am an active learner.\n                    </li>\n                </ul>\n            </>\n        ),\n        imageSource: '/img/arif.jpeg',\n        cvSource: 'https://arifsisman.github.io',\n        links: {\n            gitlab: 'https://gitlab.com/arifsisman',\n            github: 'https://github.com/arifsisman',\n            medium: 'https://medium.com/@arifsisman',\n            linkedin: 'https://www.linkedin.com/in/mustafaarifsisman'\n        }\n    }\n]\n","import { PortfolioCardProps } from '../component'\n\nexport const PORTFOLIO_LIST: PortfolioCardProps[] = [\n    {\n        name: 'Play2Gether',\n        description:\n            'The Play2Gether app is a music listening platform to listen to Spotify with your friends or other people. Listen to the same song at the same time with other people, queue and vote the songs, chat together, discover and share new music!',\n        imageSource: '/img/project-p2g.jpeg',\n        links: undefined\n    },\n    {\n        name: 'TimeCountdown',\n        description:\n            'A visual studio code extension and this extension takes care of the time countdown tasks. It is very easy to use, just type the time to count down in an allowed format, and the application will count down the given time by 1 sec in an interval.',\n        imageSource: undefined,\n        links: {\n            bitbucket:\n                'https://bitbucket.org/yazilimvip/time-countdown/src/master/',\n            microsoft:\n                'https://marketplace.visualstudio.com/items?itemName=yazilim-vip.time-countdown&ssr=false#overview'\n        }\n    },\n    {\n        name: 'maescript',\n        description:\n            'Contains useful functions with autocomplete feauteres and comes with useful set of shell scripts',\n        imageSource: undefined,\n        links: {\n            gitlab:\n                'https://gitlab.com/yazilim.vip/projects/maescript/maescript'\n        }\n    },\n    {\n        name: 'SpringVIP',\n        description:\n            'A Java Spring Library that provides helpful generic and utility classes. Some of features provided by library are generic CRUD Service and Rest controllers. See more from documentation',\n        imageSource: undefined,\n        links: {\n            gitlab:\n                'https://gitlab.com/yazilim.vip/projects/spring-vip/spring-vip'\n        }\n    }\n]\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { CardColumns } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { PageLayout, PortfolioCard, PortfolioCardProps } from '../../component'\n\n// constants\nimport { PORTFOLIO_LIST } from '../../constants'\n\nexport const Portfolio = () => {\n    const portfolioToComponent = (portfolio: PortfolioCardProps) => (\n        <PortfolioCard {...portfolio} />\n    )\n\n    return (\n        <PageLayout>\n            <CardColumns>\n                {PORTFOLIO_LIST.map(portfolioToComponent)}\n            </CardColumns>\n        </PageLayout>\n    )\n}\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app'\n\n// Add the Firebase services that you want to use\nimport 'firebase/database'\n\nvar config = {\n    databaseURL: 'https://yvip-howto.firebaseio.com',\n    projectId: 'yvip-howto'\n}\n\nexport const Firebase = firebase.initializeApp(config)\n","const TOGGLE_FM_VIEW_MODE = 'TOGGLE_FM_VIEW_MODE'\nexport const REDUX_ACTION_TYPES = {\n    TOGGLE_FM_VIEW_MODE: TOGGLE_FM_VIEW_MODE\n}\n\nconst toggleFmViewMode = () => {\n    return {\n        type: REDUX_ACTION_TYPES.TOGGLE_FM_VIEW_MODE\n    }\n}\nexport const REDUX_ACTION_CREATORS = {\n    toggleFmViewMode: toggleFmViewMode\n}\n","import React, { useEffect, useState } from 'react'\n\n// ---------------------------\n//  External Dependencies.\n// ---------------------------\nimport { Alert, Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport {\n    HowToArchive,\n    PageLayout,\n    Category,\n    json2CategoryMapper,\n} from '../../component'\nimport { Firebase } from '../../util'\nimport { REDUX_ACTION_CREATORS } from '../../redux'\n\nconst _HowTo = ({\n    requestedPath,\n    fileManagerViewMode,\n    toggleFmViewMode\n}: any) => {\n    const [howToData, setHowToData] = useState<Category | null>(null)\n    const [errorFlag, setErrorFlag] = useState<boolean>(false)\n    const [errorMessage, setErrorMessage] = useState<string | null>(null)\n    const [loadedFlag, setLoadedFlag] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (!loadedFlag) {\n            fetchHowtoData()\n        }\n    })\n\n    const fetchHowtoData = () => {\n        Firebase.database()\n            .ref('howto')\n            .on(\n                'value',\n                (snapshot) => {\n                    if (snapshot.exists()) {\n                        const val = snapshot.val()\n                        const data = JSON.parse(val)\n                        setHowToData(json2CategoryMapper(data))\n                        setLoadedFlag(true)\n                        setErrorFlag(false)\n                    } else {\n                        setLoadedFlag(true)\n                        setErrorFlag(true)\n                        setErrorMessage('Snapshot can not found on firebase.')\n                    }\n                },\n                (error: any) => {\n                    setLoadedFlag(true)\n                    setErrorFlag(true)\n                    setErrorMessage(`${error}`)\n                }\n            )\n    }\n\n    const renderInfoPage = (content: any) => {\n        return (\n            <PageLayout>\n                <div className='row h-100 text-center'>\n                    <div className='col-sm-12 my-auto'>{content}</div>\n                </div>\n            </PageLayout>\n        )\n    }\n\n    if (!loadedFlag) {\n        return renderInfoPage(<Spinner animation='border' />)\n    }\n\n    if (!howToData || errorFlag) {\n        return renderInfoPage(\n            <Alert key={1} variant='danger'>\n                {errorMessage}\n            </Alert>\n        )\n    }\n\n    return (\n        <PageLayout span={{ span: 12 }}>\n            <HowToArchive\n                key={`${requestedPath}-${new Date()}`}\n                rootCategory={howToData}\n                requestedPath={requestedPath}\n                viewMode={fileManagerViewMode}\n                viewModeToggleEventHandler={() => {\n                    toggleFmViewMode()\n                }}\n            />\n        </PageLayout>\n    )\n}\n\nconst mapStateToProps = (state: { howtoReducer: any }) => {\n    const howtoReducer = state.howtoReducer\n    return {\n        fileManagerViewMode: howtoReducer.fileManagerViewMode,\n        requestedPath: howtoReducer.requestedPath\n    }\n}\n\nconst mapDispatchToProps = { ...REDUX_ACTION_CREATORS }\nexport const HowTo = connect(mapStateToProps, mapDispatchToProps)(_HowTo)\n","import { HowTo, Category } from '../model'\n\nexport const json2CategoryMapper = (mockData: any): Category => {\n    const categoryObj = JSON.parse(JSON.stringify(mockData))\n\n    const category = new Category()\n    category.name = categoryObj.name\n\n    const subCategoryList = categoryObj.subCategoryList\n    const howtoList = categoryObj.howtoList\n\n    Object.keys(subCategoryList).forEach((sc: any) => {\n        category.addSubCategory(json2CategoryMapper(subCategoryList[sc]))\n    })\n\n    Object.keys(howtoList).forEach((ht: any) => {\n        const howto = new HowTo()\n        howto.categoryList = howtoList[ht].categoryList\n        howto.label = howtoList[ht].label\n        howto.filePath = howtoList[ht].filePath\n        howto.markdownContent = howtoList[ht].markdownContent\n        category.addHowTo(howto)\n    })\n    return category\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Row, Col } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\n\nimport { PageLayout, PersonCard, PersonCardProps } from '../../component'\n// Constants\nimport { TEAM_MEMBER_LIST } from '../../constants'\n\nconst memberToComponent = (tm: PersonCardProps) => (\n    <Col key={tm.name} lg={{ span: 4 }} md={{ span: 12 }}>\n        {/* <PersonCard portfolio={tm} /> */}\n        <PersonCard {...tm} />\n    </Col>\n)\n\nexport const About = () => {\n    return (\n        <PageLayout>\n            <Row>{TEAM_MEMBER_LIST.map(memberToComponent)}</Row>\n        </PageLayout>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\n\nimport { PageLayout } from '../../component'\nimport './NotFound.scss'\n\nexport const NotFound = () => (\n    <PageLayout>\n        <div className='row h-100 text-center'>\n            <div className='col-sm-12 my-auto'>\n                <div className='glitch' data-text='NOT FOUND'>\n                    NOT FOUND\n                </div>\n            </div>\n        </div>\n    </PageLayout>\n)\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { LOCATION_CHANGE } from 'connected-react-router'\nimport {\n    HOWTO_DEFAULT_VIEW_MODE,\n    HOWTO_VIEW_MODE_GRID_VIEW,\n    HOWTO_VIEW_MODE_LIST_VIEW\n} from '../component'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { REDUX_ACTION_TYPES } from './actions'\n\nexport const howToReducer = (state: any = [], action: any) => {\n    switch (action.type) {\n        case LOCATION_CHANGE:\n            return {\n                ...state,\n                requestedPath: action.payload.location.pathname\n            }\n        case REDUX_ACTION_TYPES.TOGGLE_FM_VIEW_MODE:\n            const prevViewMode =\n                state.fileManagerViewMode || HOWTO_DEFAULT_VIEW_MODE\n            let newViewMode\n            if (prevViewMode === HOWTO_VIEW_MODE_GRID_VIEW) {\n                newViewMode = HOWTO_VIEW_MODE_LIST_VIEW\n            } else if (prevViewMode === HOWTO_VIEW_MODE_LIST_VIEW) {\n                newViewMode = HOWTO_VIEW_MODE_GRID_VIEW\n            } else {\n                newViewMode = HOWTO_DEFAULT_VIEW_MODE\n            }\n            return {\n                ...state,\n                fileManagerViewMode: newViewMode\n            }\n        default:\n            return state\n    }\n}\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { createBrowserHistory, History } from 'history'\nimport { applyMiddleware, createStore, combineReducers } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { howToReducer } from './howToReducer'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['fileManagerViewMode']\n}\n\nexport const history = createBrowserHistory()\n\nconst createRootReducer = (history: History<unknown>) =>\n    combineReducers({\n        router: connectRouter(history),\n        howtoReducer: persistReducer(persistConfig, howToReducer)\n    })\n\nexport default function configureStore(preloadedState = undefined) {\n    // Middlewares\n    const middlewares = [routerMiddleware(history)]\n    const middlewareEnhancer = applyMiddleware(...middlewares)\n\n    // Enhancers\n    const enhancers = [middlewareEnhancer]\n    const composedEnhancers = composeWithDevTools(...enhancers)\n\n    // Reducers\n    const persistedRootReducer = createRootReducer(history)\n\n    // Store & Persistor\n    const store = createStore(\n        persistedRootReducer,\n        preloadedState,\n        composedEnhancers\n    )\n    const persistor = persistStore(store)\n\n    return { store, persistor }\n}\n","// ReactJS\nimport React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\n// Bootstrap\nimport { Col, Navbar, Row } from 'react-bootstrap'\n\n// Fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\n// Styles\nimport './App.scss'\n\n// Components\nimport { CustomNavbar } from './component'\n\n// Pages\nimport { Home, Portfolio, HowTo, About, NotFound } from './page'\n\nimport { history } from './redux/configureStore'\n\nlibrary.add(fab)\nlibrary.add(fas)\nlibrary.add(far)\n\nconst App = () => (\n    <ConnectedRouter history={history}>\n        {/* HEADER */}\n        <header>\n            <CustomNavbar />\n        </header>\n\n        {/* BODY */}\n        <main className='py-4'>\n            <Col md='12'>\n                <Row>\n                    <Switch>\n                        <Redirect\n                            from='/:url*(/+)'\n                            to={history.location.pathname.slice(0, -1)}\n                        />\n                        <Route exact path='/' component={Home} />\n                        <Route path='/portfolio' component={Portfolio} />\n                        <Route path='/howto' component={HowTo} />\n                        <Route path='/about' component={About} />\n                        <Route path='/404' component={NotFound} />\n                        <Redirect to='/404' />\n                    </Switch>\n                </Row>\n            </Col>\n        </main>\n\n        {/* FOOTER */}\n        <footer className='text-white-50'>\n            <Navbar bg='dark'>\n                <Col\n                    md={{\n                        span: 8,\n                        offset: 2\n                    }}\n                >\n                    <Row>\n                        <Col md='12'>\n                            <span>\n                                <FontAwesomeIcon\n                                    icon={faEnvelope}\n                                    className='ml-3'\n                                />\n                            </span>\n                            <span> : info@yazilim.vip</span>\n                        </Col>\n                        <Col md='12'>© yazilim.vip All Rights Reserved</Col>\n                    </Row>\n                </Col>\n            </Navbar>\n        </footer>\n    </ConnectedRouter>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport WebFont from 'webfontloader'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-sliding-pane/dist/react-sliding-pane.css'\n\nimport configureStore from './redux/configureStore'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n)\n\nWebFont.load({\n    google: {\n        families: ['Lato', 'Ubuntu']\n    }\n})\n"],"sourceRoot":""}