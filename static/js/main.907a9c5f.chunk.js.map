{"version":3,"sources":["component/howto/redux/howToActionTypes.jsx","component/howto/redux/howToActionCreators.jsx","component/howto/model/SearchItem.jsx","component/howto/howToConstants.jsx","component/howto/util/createSearchIndex.jsx","component/howto/util/parsePathAndSetContent.jsx","component/howto/redux/howToReducer.jsx","component/howto/child/Breadcrumb.jsx","component/howto/child/FileManagerItem.jsx","component/howto/child/FileManager.jsx","component/howto/child/HowToPanel.jsx","component/howto/child/ViewModeChanger.jsx","component/howto/HowToArchive.jsx","component/howto/redux/mapStateToProps.jsx","component/howto/util/searchArchive.jsx","component/customNavbar/CustomNavbar.jsx","component/personCard/PersonCard.jsx","component/portfolioCard/PortfolioCard.jsx","component/vipIcon/VipIcon.jsx","component/page/Page.jsx","page/home/Home.jsx","component/cv/Cv.jsx","constants/memberList.jsx","constants/projectPortfolioList.jsx","page/Portfolio.jsx","util/Firebase.jsx","page/HowTo.jsx","page/About.jsx","page/notFound/NotFound.jsx","redux/configureStore.jsx","App.jsx","index.js"],"names":["HOWTO_ACTION_TYPES","HOWTO_ACTION_CREATORS","onApiError","error","type","onApiSuccess","category","path","rootCategory","onSearchResult","query","categoryHits","howtoHits","onToggle","SearchItem","name","this","HOWTO_ITEM_TYPE","createSearchIndex","indexContent","data","arr","howtoList","subCategoryList","Object","keys","forEach","key","label","searchItem","toLowerCase","push","subCategory","newPath","parsePathAndSetContent","rootCategorySelectedFlag","categoryNames","slice","split","howtoSelectedFlag","endsWith","selectedHowtoName","pop","selectedCategoryName","length","folderPath","join","setContent","tmpCategory","shift","cat","selectedCategory","selectedHowto","hasOwnProperty","howToReducer","state","action","LOCATION_CHANGE","payload","location","pathname","startsWith","isLoaded","searchIndex","fileManagerViewMode","HowToBreadcrumb","props","getLink","index","renderItems","map","item","Breadcrumb","Item","active","linkAs","Link","linkProps","to","className","icon","faHome","FileManagerItem","renderListViewModeItem","link","ListGroup","color","renderGridiewModeItem","Col","xs","sm","md","lg","size","render","React","Component","FileManagerFolderItem","faFolder","FileManagerFileItem","faFile","HowToFileManager","isHit","categoryList","prefix","renderCategories","items","renderHowtos","Container","fluid","Row","HowToPanel","onRequestClose","title","overlayClassName","isOpen","children","source","markdownContent","width","from","closeIcon","faAngleDown","ViewModeChanger","ButtonGroup","toggle","ToggleButton","variant","checked","onChange","faTh","faThList","mapDispatchToProps","HowToArchive","connect","howtoReducer","result","_","extend","errMsg","howToFound","howToNotFound","FormControl","placeholder","aria-label","value","event","hits","filter","o","includes","hit","searchArchive","target","Alert","replace","CustomNavbar","Navbar","collapseOnSelect","expand","bg","Brand","href","alt","src","Toggle","aria-controls","Collapse","id","Nav","exact","activeclassname","iconCode","linkToIcon","linkMap","url","PersonCard","portfolio","portfolioLinks","links","cvSource","Card","imageSource","Img","style","Body","Title","Subtitle","Text","description","Button","rel","renderCv","undefined","Footer","entries","PortfolioCard","portfolioImageSource","VipIcon","Page","span","height","defaultProps","offset","Home","MEMBER_LIST","teamMemberList","gitlab","github","medium","linkedin","contributorList","PORTFOLIO_LIST","bitbucket","microsoft","portfolioToComponent","p","Portfolio","CardColumns","Firebase","firebase","initializeApp","databaseURL","projectId","_HowTo","fetchHowtoData","database","ref","on","snapshot","exists","val","JSON","parse","history","renderInfoPage","content","Spinner","animation","HowToComponent","HowTo","memberToComponent","tm","nd","About","NotFound","data-text","persistConfig","storage","whitelist","createBrowserHistory","library","add","fab","fas","far","App","component","faEnvelope","preloadedState","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","persistedRootReducer","combineReducers","router","connectRouter","persistReducer","store","createStore","persistor","persistStore","configureStore","ReactDOM","loading","document","getElementById","WebFont","load","google","families"],"mappings":"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","file":"static/js/main.907a9c5f.chunk.js","sourcesContent":["const ON_API_SUCCESS = 'ON_API_SUCCESS'\nconst ON_API_ERROR = 'ON_API_ERROR'\nconst ON_SEARCH = 'ON_SEARCH'\nconst ON_TOGGLE = 'ON_TOGGLE'\n\nexport const HOWTO_ACTION_TYPES = {\n    ON_API_ERROR,\n    ON_API_SUCCESS,\n    ON_SEARCH,\n    ON_TOGGLE\n}\n","import { HOWTO_ACTION_TYPES } from './howToActionTypes'\n\nconst onApiSuccess = (category, path) => {\n    return {\n        type: HOWTO_ACTION_TYPES.ON_API_SUCCESS,\n        rootCategory: category,\n        path\n    }\n}\n\nconst onApiError = (error) => {\n    return { type: HOWTO_ACTION_TYPES.ON_API_ERROR, error }\n}\n\nconst onSearchResult = (query, categoryHits, howtoHits) => {\n    return {\n        type: HOWTO_ACTION_TYPES.ON_SEARCH,\n        query,\n        categoryHits,\n        howtoHits\n    }\n}\n\nconst onToggle = () => {\n    return { type: HOWTO_ACTION_TYPES.ON_TOGGLE }\n}\n\nexport const HOWTO_ACTION_CREATORS = {\n    onApiError,\n    onApiSuccess,\n    onSearchResult,\n    onToggle\n}\n","export class SearchItem {\n    constructor(path, type, name) {\n        this.path = path\n        this.type = type\n        this.name = name\n    }\n}\n","export const HOWTO_VIEW_MODE_LIST_VIEW = true\nexport const HOWTO_VIEW_MODE_GRID_VIEW = false\nexport const HOWTO_DEFAULT_VIEW_MODE = HOWTO_VIEW_MODE_GRID_VIEW\n\nexport const HOWTO_ITEM_TYPE = {\n    HOWTO: 'howto',\n    CATEGORY: 'category',\n    HOWTO_HIT: 'howto_hit',\n    CATEGORY_HIT: 'category_hit'\n}\n","// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { SearchItem } from '../model'\nimport { HOWTO_ITEM_TYPE } from '../howToConstants'\n\nexport const createSearchIndex = (rootCategory) => {\n    return indexContent(rootCategory, [], '/howto')\n}\n\nconst indexContent = (data, arr, path) => {\n    const howtoList = data.howtoList\n    const subCategoryList = data.subCategoryList\n\n    Object.keys(howtoList).forEach((key) => {\n        const howto = howtoList[key]\n        const name = howto.label\n        const newPath = path + '/' + name\n\n        const searchItem = new SearchItem(\n            newPath,\n            HOWTO_ITEM_TYPE.HOWTO_HIT,\n            name.toLowerCase()\n        )\n\n        arr.push(searchItem)\n    })\n\n    Object.keys(subCategoryList).forEach((key) => {\n        const subCategory = subCategoryList[key]\n        const name = subCategory.name\n        const newPath = path + '/' + name\n\n        const searchItem = new SearchItem(\n            newPath,\n            HOWTO_ITEM_TYPE.CATEGORY_HIT,\n            name.toLowerCase()\n        )\n\n        arr.push(searchItem)\n\n        indexContent(subCategory, arr, newPath)\n    })\n\n    return arr\n}\n","/**\n *\n * Example1\n * url: https://www.yazilim.vip/howto\n * path = \"/howto\"\n * categoryNames = []\n * folderPath = \"howto\"\n * selectedCategoryName = \"howto\"\n *\n * Example2\n * url: https://www.yazilim.vip/howto/linux\n * path = \"linux\"\n * categoryNames = [\"linux\"]\n * folderPath = \"howto/linux\"\n * selectedCategoryName = \"linux\"\n *\n * Example3\n * url: https://www.yazilim.vip/howto/linux/specific_distro\n * path = \"/howto/linux/specific_distro\"\n * categoryNames = [\"linux\", \"specific_distro\"]\n * folderPath = \"howto/linux/specific_distro\"\n * selectedCategoryName = \"specific_distro\"\n *\n * Example4\n * url: http://www.yazilim.vip/howto/ide/Eclipse/eclipse-shortcuts_configuration.howto\n * path = \"/howto/ide/Eclipse/eclipse-shortcuts_configuration.howto\"\n * categoryNames = [\"ide, \"Eclipse\"]\n * folderPath = \"howto/ide/Eclipse\"\n * selectedCategoryName = \"Eclipse\"\n * selectedHowtoName = \"eclipse-shortcuts_configuration.howto\"\n */\nexport const parsePathAndSetContent = (rootCategory, path) => {\n    const rootCategorySelectedFlag = path === '/howto'\n    const categoryNames = path.slice(1).split('/')\n    const howtoSelectedFlag = path.endsWith('.howto') || path.endsWith('.md')\n    const selectedHowtoName = howtoSelectedFlag ? categoryNames.pop() : null\n    const selectedCategoryName = categoryNames[categoryNames.length - 1]\n    const folderPath = '/' + categoryNames.join('/')\n\n    return {\n        folderPath: folderPath,\n        categoryNames: categoryNames,\n        selectedCategoryName: selectedCategoryName,\n        selectedHowtoName: selectedHowtoName,\n        howtoSelectedFlag: howtoSelectedFlag,\n        rootCategorySelectedFlag: rootCategorySelectedFlag,\n        ...setContent(rootCategory, categoryNames, selectedHowtoName)\n    }\n}\n\nconst setContent = (rootCategory, categoryNames, selectedHowtoName) => {\n    // set selectedCategory\n    let tmpCategory = rootCategory\n\n    categoryNames.shift() // shift first category (howto), because rootCategory is not wrapped with \"howto\" key\n    for (const cat of categoryNames) {\n        if (!tmpCategory.subCategoryList[cat]) {\n            tmpCategory = null\n            break /// category not exists\n        }\n\n        tmpCategory = tmpCategory.subCategoryList[cat]\n    }\n\n    const selectedCategory = tmpCategory\n\n    // set selectedHowto\n    let selectedHowto = null\n\n    if (\n        selectedHowtoName &&\n        selectedCategory &&\n        //! eslint gives error\n        // eslint-disable-next-line no-prototype-builtins\n        selectedCategory.howtoList.hasOwnProperty(selectedHowtoName)\n    ) {\n        selectedHowto = selectedCategory.howtoList[selectedHowtoName]\n    }\n\n    return {\n        selectedCategory: selectedCategory,\n        selectedHowto: selectedHowto,\n        categoryHits: null,\n        howtoHits: null\n    }\n}\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { LOCATION_CHANGE } from 'connected-react-router'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { parsePathAndSetContent, createSearchIndex } from '../util'\nimport { HOWTO_ACTION_TYPES } from './howToActionTypes'\n\nexport const howToReducer = (state = [], action) => {\n    switch (action.type) {\n        case LOCATION_CHANGE:\n            //! eslint gives error\n            // eslint-disable-next-line no-case-declarations\n            const path = action.payload.location.pathname\n            if (path.startsWith('/howto') && state.rootCategory) {\n                return {\n                    ...state,\n                    ...parsePathAndSetContent(state.rootCategory, path),\n                    query: ''\n                }\n            } else {\n                return {\n                    ...state\n                }\n            }\n\n        case HOWTO_ACTION_TYPES.ON_API_SUCCESS:\n            return {\n                ...state,\n                rootCategory: action.rootCategory,\n                isLoaded: true,\n                ...parsePathAndSetContent(action.rootCategory, action.path),\n                searchIndex: createSearchIndex(action.rootCategory),\n                query: ''\n            }\n\n        case HOWTO_ACTION_TYPES.ON_API_ERROR:\n            return {\n                ...state,\n                error: action.error,\n                isLoaded: true\n            }\n\n        case HOWTO_ACTION_TYPES.ON_SEARCH:\n            return {\n                ...state,\n                query: action.query,\n                categoryHits: action.categoryHits,\n                howtoHits: action.howtoHits\n            }\n\n        case HOWTO_ACTION_TYPES.ON_TOGGLE:\n            return {\n                ...state,\n                fileManagerViewMode: !state.fileManagerViewMode\n            }\n\n        default:\n            return state\n    }\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\n\nexport const HowToBreadcrumb = (props) => {\n    // values from mapStateToProps\n    const { categoryNames, rootCategorySelectedFlag } = props\n\n    const getLink = (index) => {\n        return '/howto/' + categoryNames.slice(0, index).join('/')\n    }\n\n    const renderItems = categoryNames.map((item, index) => {\n        return (\n            <Breadcrumb.Item\n                key={item}\n                active={index + 1 === categoryNames.length}\n                linkAs={Link}\n                linkProps={{ to: getLink(index + 1), className: 'link' }}\n            >\n                {item}\n            </Breadcrumb.Item>\n        )\n    })\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item\n                key='root'\n                active={rootCategorySelectedFlag}\n                linkAs={Link}\n                linkProps={{ to: '/howto', className: 'link' }}\n            >\n                <span>\n                    <FontAwesomeIcon icon={faHome} />\n                </span>\n            </Breadcrumb.Item>\n\n            {renderItems}\n        </Breadcrumb>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Link } from 'react-router-dom'\nimport { ListGroup, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolder } from '@fortawesome/free-solid-svg-icons'\nimport { faFile } from '@fortawesome/free-regular-svg-icons'\n\nclass FileManagerItem extends React.Component {\n    fileManagerViewMode\n    name\n    link\n    icon\n    color\n\n    constructor(props) {\n        super(props)\n        this.fileManagerViewMode = props.fileManagerViewMode\n        this.name = props.name\n        this.link = props.link\n        this.icon = props.icon\n        this.color = props.color\n    }\n\n    renderListViewModeItem = () => {\n        return (\n            <Link to={this.link} className='link' key={this.link}>\n                <ListGroup.Item>\n                    <FontAwesomeIcon\n                        icon={this.icon}\n                        className='mr-3'\n                        color={this.color}\n                    />\n                    {this.name}\n                </ListGroup.Item>\n            </Link>\n        )\n    }\n\n    renderGridiewModeItem = () => {\n        return (\n            <Col\n                xs={4}\n                sm={3}\n                md={3}\n                lg={2}\n                className='py-4 text-center'\n                key={this.link}\n            >\n                <Link to={this.link} className='link'>\n                    <FontAwesomeIcon\n                        icon={this.icon}\n                        className='pb-1'\n                        size='4x'\n                        color={this.color}\n                    />\n                    <br />\n                    {this.name}\n                </Link>\n            </Col>\n        )\n    }\n\n    render = () => {\n        return this.fileManagerViewMode\n            ? this.renderListViewModeItem()\n            : this.renderGridiewModeItem()\n    }\n}\n\nexport class FileManagerFolderItem extends FileManagerItem {\n    constructor(props) {\n        super(props)\n        this.icon = faFolder\n        this.color = '#50a4d4'\n    }\n}\n\nexport class FileManagerFileItem extends FileManagerItem {\n    constructor(props) {\n        super(props)\n        this.icon = faFile\n        this.color = '#494d52'\n    }\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Container, ListGroup, Row } from 'react-bootstrap'\nimport {\n    HOWTO_VIEW_MODE_GRID_VIEW,\n    HOWTO_VIEW_MODE_LIST_VIEW\n} from '../howToConstants'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { FileManagerFileItem, FileManagerFolderItem } from './FileManagerItem'\n\nexport const HowToFileManager = (props) => {\n    // values from mapStateToProps\n    const {\n        folderPath,\n        isHit,\n        categoryList,\n        howtoList,\n        fileManagerViewMode\n    } = props\n\n    const prefix = folderPath + '/'\n\n    const renderCategories = (items) => {\n        return Object.keys(items).map((key) => {\n            const name = isHit ? items[key].name : items[key].name\n            const link = isHit ? items[key].path : prefix + items[key].name\n            return (\n                <FileManagerFolderItem\n                    key={link}\n                    fileManagerViewMode={fileManagerViewMode}\n                    name={name}\n                    link={link}\n                />\n            )\n        })\n    }\n\n    const renderHowtos = (items) => {\n        return Object.keys(items).map((key) => {\n            const name = isHit ? items[key].name : items[key].label\n            const link = isHit ? items[key].path : prefix + items[key].label\n            return (\n                <FileManagerFileItem\n                    key={link}\n                    fileManagerViewMode={fileManagerViewMode}\n                    name={name}\n                    link={link}\n                />\n            )\n        })\n    }\n\n    const renderByToggle = () => {\n        if (fileManagerViewMode === HOWTO_VIEW_MODE_LIST_VIEW) {\n            return (\n                <ListGroup>\n                    {renderCategories(categoryList)}\n                    {renderHowtos(howtoList)}\n                </ListGroup>\n            )\n        } else if (fileManagerViewMode === HOWTO_VIEW_MODE_GRID_VIEW) {\n            return (\n                <Row>\n                    {renderCategories(categoryList)}\n                    {renderHowtos(howtoList)}\n                </Row>\n            )\n        }\n    }\n\n    return <Container fluid>{renderByToggle()}</Container>\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport SlidingPane from 'react-sliding-pane'\nimport ReactMarkdown from 'react-markdown'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { HowToBreadcrumb } from './Breadcrumb'\n\nexport const HowToPanel = (props) => {\n    const {\n        howtoSelectedFlag,\n        selectedHowto,\n        onRequestClose,\n        categoryNames,\n        rootCategorySelectedFlag\n    } = props\n\n    const title = (\n        <>\n            <HowToBreadcrumb\n                categoryNames={categoryNames}\n                rootCategorySelectedFlag={rootCategorySelectedFlag}\n            />\n        </>\n    )\n    return (\n        <SlidingPane\n            className='howto-sliding-pane'\n            overlayClassName='howto-sliding-pane-overlay'\n            isOpen={howtoSelectedFlag}\n            children={<ReactMarkdown source={selectedHowto.markdownContent} />}\n            title={title}\n            width='100'\n            from='bottom'\n            closeIcon={<FontAwesomeIcon icon={faAngleDown} size='2x' />}\n            onRequestClose={onRequestClose}\n        />\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTh, faThList } from '@fortawesome/free-solid-svg-icons'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport {\n    HOWTO_VIEW_MODE_GRID_VIEW,\n    HOWTO_VIEW_MODE_LIST_VIEW\n} from '../howToConstants'\n\nexport const ViewModeChanger = (props) => {\n    const { fileManagerViewMode, onToggle } = props\n\n    return (\n        <ButtonGroup toggle className='float-right'>\n            <ToggleButton\n                type='radio'\n                variant='secondary'\n                name='radio'\n                checked={fileManagerViewMode === HOWTO_VIEW_MODE_GRID_VIEW}\n                onChange={() => onToggle()}\n            >\n                <FontAwesomeIcon icon={faTh} />\n            </ToggleButton>\n\n            <ToggleButton\n                type='radio'\n                variant='secondary'\n                name='radio'\n                checked={fileManagerViewMode === HOWTO_VIEW_MODE_LIST_VIEW}\n                onChange={() => onToggle()}\n            >\n                <FontAwesomeIcon icon={faThList} />\n            </ToggleButton>\n        </ButtonGroup>\n    )\n}\n","// ReactJS Core\nimport React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { push } from 'connected-react-router'\nimport { connect } from 'react-redux'\nimport { Col, Row, Alert, FormControl } from 'react-bootstrap'\nimport 'react-sliding-pane/dist/react-sliding-pane.css'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport './HowToArchive.scss'\n\nimport { HOWTO_ACTION_CREATORS, mapStateToProps } from './redux'\n\nimport {\n    HowToBreadcrumb,\n    HowToFileManager,\n    ViewModeChanger,\n    HowToPanel\n} from './child'\n\nimport { searchArchive } from './util'\n\nconst _HowToArchive = ({\n    // values from mapStateToProps\n    folderPath,\n    selectedCategory,\n    selectedCategoryName,\n    selectedHowto,\n    selectedHowtoName,\n    howtoSelectedFlag,\n    searchIndex,\n    query,\n    fileManagerViewMode,\n\n    // from HowToBreacrumb\n    categoryNames,\n    rootCategorySelectedFlag,\n\n    // from HowToFileManager\n    // folderPath,\n    isHit,\n    categoryList,\n    howtoList,\n    // fileManagerViewMode\n\n    // methods from props\n    onSearchResult,\n    onToggle,\n    push\n}) => {\n    const showError = (errMsg) => (\n        <Alert key={1} variant='danger'>\n            {errMsg}\n        </Alert>\n    )\n\n    const renderHeader = () => (\n        <Row>\n            <Col md='7'>\n                <HowToBreadcrumb\n                    categoryNames={categoryNames}\n                    rootCategorySelectedFlag={rootCategorySelectedFlag}\n                />\n            </Col>\n            <Col md='2' sm='3' className='mb-2 mb-sm-0'>\n                <ViewModeChanger\n                    fileManagerViewMode={fileManagerViewMode}\n                    onToggle={onToggle}\n                />\n            </Col>\n            <Col md='3' sm='9'>\n                <FormControl\n                    type='search'\n                    placeholder='Search...'\n                    aria-label='Search'\n                    value={query}\n                    onChange={(event) => {\n                        return searchArchive(\n                            searchIndex,\n                            event.target.value, // query\n                            onSearchResult\n                        )\n                    }}\n                />\n            </Col>\n        </Row>\n    )\n\n    const categoryFound = selectedCategory && true\n    const howToFound = howtoSelectedFlag && selectedHowto\n    const howToNotFound = howtoSelectedFlag && !selectedHowto\n    if (!categoryFound) {\n        return showError(\n            <>\n                Category <b>{folderPath.replace('/howto/', '')}</b> not found in\n                path.\n            </>\n        )\n    }\n\n    return (\n        <div>\n            {renderHeader()}\n            <hr />\n\n            {howToNotFound && (\n                <Alert key={1} variant='danger'>\n                    <b>{selectedHowtoName}</b> not found in{' '}\n                    <b>{selectedCategory.name}</b> folder.\n                </Alert>\n            )}\n\n            <HowToFileManager\n                folderPath={folderPath}\n                isHit={isHit}\n                categoryList={categoryList}\n                howtoList={howtoList}\n                fileManagerViewMode={fileManagerViewMode}\n            />\n\n            {howToFound && (\n                <HowToPanel\n                    categoryNames={categoryNames}\n                    rootCategorySelectedFlag={rootCategorySelectedFlag}\n                    howtoSelectedFlag={howtoSelectedFlag}\n                    selectedHowto={selectedHowto}\n                    onRequestClose={() => {\n                        push(folderPath)\n                    }}\n                />\n            )}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = { ...HOWTO_ACTION_CREATORS, push }\nexport const HowToArchive = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_HowToArchive)\n","import _ from 'underscore'\n\nimport { HOWTO_DEFAULT_VIEW_MODE } from '../howToConstants'\n\nexport const mapStateToProps = (state) => {\n    const howtoReducer = state.howtoReducer\n\n    const result = {\n        folderPath: howtoReducer.folderPath,\n        selectedCategory: howtoReducer.selectedCategory,\n        selectedCategoryName: howtoReducer.selectedCategoryName,\n        selectedHowto: howtoReducer.selectedHowto,\n        selectedHowtoName: howtoReducer.selectedHowtoName,\n        howtoSelectedFlag: howtoReducer.howtoSelectedFlag,\n        query: howtoReducer.query,\n        categoryHits: howtoReducer.categoryHits,\n        howtoHits: howtoReducer.howtoHits,\n        searchIndex: howtoReducer.searchIndex,\n        fileManagerViewMode: howtoReducer.fileManagerViewMode\n            ? howtoReducer.fileManagerViewMode\n            : HOWTO_DEFAULT_VIEW_MODE,\n\n        // from HowToBreadcrumb\n        categoryNames: howtoReducer.categoryNames,\n        rootCategorySelectedFlag: howtoReducer.rootCategorySelectedFlag\n    }\n\n    const categoryHits = howtoReducer.categoryHits\n    const howtoHits = howtoReducer.howtoHits\n    const selectedCategory = howtoReducer.selectedCategory\n\n    if (selectedCategory) {\n        const categoryList = categoryHits\n            ? _.extend({}, categoryHits)\n            : selectedCategory.subCategoryList\n        const howtoList = howtoHits\n            ? _.extend({}, howtoHits)\n            : selectedCategory.howtoList\n\n        // from HowToFileManager\n        // folderPath: howtoReducer.folderPath,\n        result.isHit = howtoReducer.categoryHits || howtoReducer.howtoHits\n        result.categoryList = categoryList\n        result.howtoList = howtoList\n        // fileManagerViewMode: howtoReducer.fileManagerViewMode\n    }\n    return result\n}\n","import { HOWTO_ITEM_TYPE } from '../howToConstants'\n\nexport const searchArchive = (searchIndex, query, onSearchResult) => {\n    if (!query) {\n        return onSearchResult('', null, null)\n    }\n\n    const hits = searchIndex.filter((o) => o.name.includes(query.toLowerCase()))\n\n    if (hits) {\n        const categoryHits = []\n        const howtoHits = []\n\n        hits.forEach((hit) => {\n            if (hit.type === HOWTO_ITEM_TYPE.CATEGORY_HIT) {\n                categoryHits.push(hit)\n            } else if (hit.type === HOWTO_ITEM_TYPE.HOWTO_HIT) {\n                howtoHits.push(hit)\n            }\n        })\n        onSearchResult(query, categoryHits, howtoHits)\n    } else {\n        onSearchResult(query, null, null)\n    }\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport './CustomNavbar.scss'\n\n// Project Components\nimport { VipIcon } from '../'\n\nexport const CustomNavbar = () => {\n    return (\n        <Navbar\n            collapseOnSelect\n            expand='lg'\n            bg='dark'\n            variant='dark'\n            className='text-center'\n        >\n            <div className='animate__animated animate__flipInX'>\n                <Navbar.Brand className='my-2'>\n                    <a href='/'>\n                        <img alt='' src='/logo.svg' width='220' />\n                    </a>\n                </Navbar.Brand>\n            </div>\n            <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\n            <Navbar.Collapse id='responsive-navbar-nav'>\n                <Nav className='mx-auto page-nav'>\n                    <NavLink\n                        exact\n                        activeclassname='active'\n                        className='text-light nav-link'\n                        to='/'\n                    >\n                        Home\n                    </NavLink>\n\n                    <NavLink\n                        activeclassname='active'\n                        className='text-light nav-link'\n                        to='/portfolio'\n                    >\n                        Portfolio\n                    </NavLink>\n\n                    <NavLink\n                        activeclassname='active'\n                        className='text-light nav-link'\n                        to='/howto'\n                    >\n                        HowTo\n                    </NavLink>\n\n                    <NavLink\n                        activeclassname='active'\n                        className='text-light nav-link'\n                        to='/about'\n                    >\n                        About\n                    </NavLink>\n                </Nav>\n                <Nav>\n                    <span\n                        activeclassname='active'\n                        className='text-light nav-link'\n                    >\n                        <VipIcon\n                            iconCode='gitlab'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://gitlab.com/yazilim.vip'\n                        />\n                        <VipIcon\n                            iconCode='github'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://github.com/yazilim-vip'\n                        />\n                        <VipIcon\n                            iconCode='bitbucket'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://bitbucket.org/yazilimvip/'\n                        />\n                        <VipIcon\n                            iconCode='docker'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://hub.docker.com/orgs/yazilimvip/repositories'\n                        />\n                        <VipIcon\n                            iconCode='linkedin'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://www.linkedin.com/company/yazilimvip'\n                        />\n                        <VipIcon\n                            iconCode='medium'\n                            className='animate__animated animate__zoomInLeft'\n                            link='https://medium.com/yazilim-vip'\n                        />\n                        <VipIcon\n                            iconCode='discord'\n                            className='animate__animated animate__zoomInLeft'\n                            link=''\n                        />\n                    </span>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Button, Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { VipIcon } from '..'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFile } from '@fortawesome/free-solid-svg-icons'\n\nconst linkToIcon = (linkMap) => {\n    const iconCode = linkMap[0]\n    const url = linkMap[1]\n\n    return (\n        <a\n            href={url}\n            key={url}\n            target='blank'\n            className='text-muted portfolio-link'\n        >\n            <VipIcon iconCode={iconCode} />\n        </a>\n    )\n}\n\nconst renderCv = (cvSource) => {\n    return (\n        <div className='text-center'>\n            <hr />\n\n            <Button\n                className='d-block'\n                variant='outline-primary'\n                href={cvSource}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <FontAwesomeIcon icon={faFile} className='mr-3' />\n                Curriculum Vitae\n            </Button>\n        </div>\n    )\n}\n\nexport const PersonCard = (props) => {\n    const portfolio = props.portfolio\n    const portfolioLinks = portfolio.links\n    const cvSource = portfolio.cvSource\n\n    return (\n        <Card className='portfolio-card shadow'>\n            {portfolio.imageSource && (\n                <Card.Img\n                    className='mx-auto mt-2 border border-secondary'\n                    style={{\n                        width: '70%'\n                    }}\n                    variant='top'\n                    src={`${portfolio.imageSource}`}\n                />\n            )}\n\n            <Card.Body>\n                <div className='text-center mb-3'>\n                    <Card.Title>{portfolio.name}</Card.Title>\n                    <Card.Subtitle className='text-muted'>\n                        {props.portfolio.title}\n                    </Card.Subtitle>\n                </div>\n\n                <div id='example-collapse-text'>\n                    <Card.Text className='border-top pt-3'>\n                        {portfolio.description}\n                    </Card.Text>\n                </div>\n\n                {cvSource ? renderCv(cvSource) : null}\n            </Card.Body>\n\n            {portfolioLinks !== undefined && portfolioLinks !== null && (\n                <Card.Footer className='text-center'>\n                    {Object.entries(portfolioLinks).map(linkToIcon)}\n                </Card.Footer>\n            )}\n        </Card>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { VipIcon } from '../'\n\nconst linkToIcon = (linkMap) => {\n    const iconCode = linkMap[0]\n    const url = linkMap[1]\n\n    return (\n        <a\n            href={url}\n            key={url}\n            target='blank'\n            className='text-muted portfolio-link'\n        >\n            <VipIcon iconCode={iconCode} />\n        </a>\n    )\n}\n\nexport const PortfolioCard = (props) => {\n    const portfolio = props.portfolio\n    const portfolioImageSource = portfolio.imageSource\n    const portfolioLinks = portfolio.links\n\n    return (\n        <Card className='mb-4 portfolio-card shadow'>\n            {portfolioImageSource && (\n                <Card.Img variant='top' src={`${portfolioImageSource}`} />\n            )}\n            <Card.Body>\n                <Card.Title>{portfolio.name}</Card.Title>\n                <Card.Subtitle className='mb-4 text-muted'>\n                    {portfolio.title}\n                </Card.Subtitle>\n                <Card.Text>{portfolio.description}</Card.Text>\n            </Card.Body>\n            {portfolioLinks !== undefined && portfolioLinks !== null && (\n                <Card.Footer className='text-center'>\n                    {Object.entries(portfolioLinks).map(linkToIcon)}\n                </Card.Footer>\n            )}\n        </Card>\n    )\n}\n\nexport default PortfolioCard\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './VipIcon.scss'\n\nexport const VipIcon = (props) => (\n    <div\n        href={props.link}\n        className={`d-inline-block yvip-icon ${props.iconCode} ${props.className}`}\n    >\n        <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            <FontAwesomeIcon icon={['fab', props.iconCode]} className='mr-3' />\n        </a>\n    </div>\n)\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Col, Row } from 'react-bootstrap'\n\nexport const Page = (props) => {\n    return (\n        <Col md={props.span} style={{ height: '100%' }}>\n            <Row>\n                <Col md='12'>{props.children}</Col>\n            </Row>\n        </Col>\n    )\n}\n\nPage.defaultProps = {\n    span: { span: 8, offset: 2 }\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { Page } from '../../component'\nimport './Home.scss'\n\nexport const Home = (props) => (\n    <Page>\n        <Card className='mb-4 portfolio-card shadow yvip-card'>\n            <div className='yvip-card-img img-responsive img-fluid' />\n            <Card.Body>\n                <Card.Title>\n                    <h1 className='text-center display-4 pb-2'>\n                        Do the right, not the easy.\n                    </h1>\n                </Card.Title>\n\n                <Card.Text>\n                    To keep this platform open to everyone who is competent and\n                    willing to share what we call an open source world. A\n                    platform aimed at presenting our competencies to the open\n                    source world without waiting for a response.\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    </Page>\n)\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { faDownload, faFile } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button, Modal } from 'react-bootstrap'\nimport { Document, Page, pdfjs } from 'react-pdf'\n\nimport './Cv.scss'\n\nexport class Cv extends React.Component {\n    constructor(props) {\n        super()\n\n        this.state = {\n            show: false,\n            cvSource: props.cvSource,\n            numPages: null,\n            currentPage: null,\n            modalSize: props.modalSize ? props.modalSize : 'lg',\n            htmlMode: React.isValidElement(props.cvSource),\n            modalTriggerElement: props.children ? (\n                props.children\n            ) : (\n                <div className='text-center'>\n                    <Button variant='primary'>\n                        <FontAwesomeIcon icon={faFile} className='mr-3' />\n                        Resume\n                    </Button>\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        pdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n    }\n\n    closeModal = () => this.setState({ show: false })\n    showModal = () => this.setState({ show: true })\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({\n            numPages: numPages,\n            currentPage: 1\n        })\n    }\n\n    render = () => {\n        let modalBody = ''\n        if (this.state.htmlMode) {\n            modalBody = this.state.cvSource\n        } else {\n            modalBody = (\n                <Document\n                    file={this.state.cvSource}\n                    //! eslint gives error\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onLoadSuccess={this.onDocumentLoadSuccess.bind(this)}\n                >\n                    {Array.from(new Array(this.state.numPages), (el, index) => (\n                        <Page\n                            key={`page_${index + 1}`}\n                            pageNumber={index + 1}\n                        />\n                    ))}\n                </Document>\n            )\n        }\n\n        return (\n            <>\n                {React.cloneElement(this.state.modalTriggerElement, {\n                    onClick: this.showModal\n                })}\n\n                <Modal\n                    size={this.state.modalSize}\n                    show={this.state.show}\n                    onHide={this.closeModal}\n                >\n                    <Modal.Header closeButton className='modal-header-footer'>\n                        {!this.state.htmlMode && (\n                            <a\n                                href={this.state.cvSource}\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                <FontAwesomeIcon icon={faDownload} />\n                            </a>\n                        )}\n                    </Modal.Header>\n\n                    <Modal.Body>{modalBody}</Modal.Body>\n\n                    {/* <Modal.Footer className=\"pull-left\" className=\"modal-header-footer\">\n                        <Button variant=\"secondary\" onClick={this.closeModal}>\n                            Close\n                        </Button>\n                    </Modal.Footer> */}\n                </Modal>\n            </>\n        )\n    }\n}\n","import React from 'react'\n\nexport const MEMBER_LIST = {\n    teamMemberList: [\n        {\n            name: 'Mehmet Arif Emre Sen',\n            description: (\n                <>\n                    <a\n                        className='d-block text-center'\n                        href='https://maemresen.github.io'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <b>Personal Website</b>\n                    </a>\n                    <hr />\n                    <a\n                        className='d-block text-center'\n                        href='https://maemresen.github.io/curriculum-vitae/cv_mehmet_arif_emre_sen.pdf'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <b>CV Link</b>\n                    </a>\n                </>\n            ),\n            imageSource: '/img/emre_portrait_cropped.jpeg',\n            title: 'Major Contributor',\n            links: {\n                gitlab: 'https://gitlab.com/emresen',\n                github: 'https://github.com/maemresen',\n                medium: 'https://medium.com/@maemresen',\n                linkedin: 'https://www.linkedin.com/in/maemresen'\n            }\n        },\n\n        {\n            name: 'Burak Erkan',\n            description: (\n                <div>\n                    <span>yazilim.vip patriot</span>\n                    <ul>\n                        <li>\n                            2008 - now (software developer & team lead &\n                            manager)\n                        </li>\n                        <li>2000 - now (still a software amateur)</li>\n                    </ul>\n                </div>\n            ),\n            imageSource: '/img/burak.jpeg',\n            // cvSource: \"/cv/burak.pdf\",\n            title: 'Major Contributor'\n        },\n\n        {\n            name: 'Mustafa Arif Sisman',\n            title: 'Major Contributor',\n            description: (\n                <>\n                    <ul>\n                        <li>\n                            I aim to achieve the most automated and optimized\n                            result possible, following the principles of agile\n                            software development and analytical thinking.\n                        </li>\n                        <li>\n                            I work in the field of artificial intelligence and\n                            web technologies, I am an active learner.\n                        </li>\n                    </ul>\n                </>\n            ),\n            imageSource: '/img/arif.jpeg',\n            cvSource: 'https://arifsisman.github.io',\n            links: {\n                gitlab: 'https://gitlab.com/arifsisman',\n                github: 'https://github.com/arifsisman',\n                medium: 'https://medium.com/@arifsisman',\n                linkedin: 'https://www.linkedin.com/in/mustafaarifsisman'\n            }\n        }\n    ],\n\n    contributorList: []\n}\n","export const PORTFOLIO_LIST = [\n    {\n        name: 'Play2Gether',\n        description:\n            'The Play2Gether app is a music listening platform to listen to Spotify with your friends or other people. Listen to the same song at the same time with other people, queue and vote the songs, chat together, discover and share new music!',\n        imageSource: '/img/project-p2g.jpeg'\n    },\n    {\n        name: 'TimeCountdown',\n        description:\n            'A visual studio code extension and this extension takes care of the time countdown tasks. It is very easy to use, just type the time to count down in an allowed format, and the application will count down the given time by 1 sec in an interval.',\n        links: {\n            bitbucket:\n                'https://bitbucket.org/yazilimvip/time-countdown/src/master/',\n            microsoft:\n                'https://marketplace.visualstudio.com/items?itemName=yazilim-vip.time-countdown&ssr=false#overview'\n        }\n    },\n    {\n        name: 'maescript',\n        description:\n            'Contains useful functions with autocomplete feauteres and comes with useful set of shell scripts',\n        links: {\n            gitlab:\n                'https://gitlab.com/yazilim.vip/projects/maescript/maescript'\n        }\n    },\n    {\n        name: 'SpringVIP',\n        description:\n            'A Java Spring Library that provides helpful generic and utility classes. Some of features provided by library are generic CRUD Service and Rest controllers. See more from documentation',\n        links: {\n            gitlab:\n                'https://gitlab.com/yazilim.vip/projects/spring-vip/spring-vip'\n        }\n    }\n]\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { CardColumns } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { Page, PortfolioCard } from '../component'\n\n// constants\nimport { PORTFOLIO_LIST } from '../constants'\n\nconst portfolioToComponent = (p) => <PortfolioCard portfolio={p} />\n\nexport const Portfolio = () => (\n    <Page>\n        <CardColumns>{PORTFOLIO_LIST.map(portfolioToComponent)}</CardColumns>\n    </Page>\n)\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app'\n\n// Add the Firebase services that you want to use\nimport 'firebase/database'\n\nvar config = {\n    databaseURL: 'https://yvip-howto.firebaseio.com',\n    projectId: 'yvip-howto'\n}\n\nexport const Firebase = firebase.initializeApp(config)\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { connect } from 'react-redux'\nimport { Alert, Spinner } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { Page, HowTo as HowToComponent } from '../component'\nimport { Firebase } from '../util'\n\nclass _HowTo extends React.Component {\n    componentDidMount() {\n        const { rootCategory } = this.props\n\n        if (!rootCategory) {\n            this.fetchHowtoData()\n        }\n    }\n\n    fetchHowtoData = () => {\n        Firebase.database()\n            .ref('howto-dev')\n            .on(\n                'value',\n                (snapshot) => {\n                    if (snapshot.exists()) {\n                        const val = snapshot.val()\n                        const data = JSON.parse(val)\n                        const path = this.props.history.location.pathname\n\n                        this.props.onApiSuccess(data, path)\n                    } else {\n                        this.props.onApiError(\n                            'Snapshot can not found on firebase.'\n                        )\n                    }\n                },\n                (error) => {\n                    this.props.onApiError(error)\n                }\n            )\n    }\n\n    renderInfoPage = (content) => {\n        return (\n            <Page>\n                <div className='row h-100 text-center'>\n                    <div className='col-sm-12 my-auto'>{content}</div>\n                </div>\n            </Page>\n        )\n    }\n\n    render() {\n        const { error, isLoaded } = this.props\n\n        if (!isLoaded) {\n            return this.renderInfoPage(<Spinner animation='border' />)\n        }\n\n        if (error) {\n            return this.renderInfoPage(\n                <Alert key={1} variant='danger'>\n                    {error}\n                </Alert>\n            )\n        }\n\n        return (\n            <Page span={{ span: 12 }}>\n                <HowToComponent.HowToArchive />\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const howtoReducer = state.howtoReducer\n\n    return {\n        error: howtoReducer.error,\n        isLoaded: howtoReducer.isLoaded,\n        rootCategory: howtoReducer.rootCategory\n    }\n}\n\nconst mapDispatchToProps = HowToComponent.HOWTO_ACTION_CREATORS\n\nexport const HowTo = connect(mapStateToProps, mapDispatchToProps)(_HowTo)\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Row, Col } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { Page, PersonCard } from '../component'\n\n// Constants\nimport { MEMBER_LIST } from '../constants'\n\nconst memberToComponent = (tm) => (\n    <Col key={tm.name} lg={{ span: 4 }} nd={{ span: 12 }}>\n        <PersonCard portfolio={tm} />\n    </Col>\n)\n\nexport const About = () => {\n    const teamMemberList = MEMBER_LIST.teamMemberList\n    const contributorList = MEMBER_LIST.contributorList\n    return (\n        <Page>\n            <Row>{teamMemberList.map(memberToComponent)}</Row>\n\n            {contributorList.length !== 0 && (\n                <>\n                    <hr />\n                    <Row>{contributorList.map(memberToComponent)}</Row>\n                </>\n            )}\n        </Page>\n    )\n}\n","import React from 'react'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\n\nimport { Page } from '../../component'\nimport './NotFound.scss'\n\nexport const NotFound = () => (\n    <Page>\n        <div className='row h-100 text-center'>\n            <div className='col-sm-12 my-auto'>\n                <div className='glitch' data-text='NOT FOUND'>\n                    NOT FOUND\n                </div>\n            </div>\n        </div>\n    </Page>\n)\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { createBrowserHistory } from 'history'\nimport { applyMiddleware, createStore, combineReducers } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { HowTo } from '../component'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['fileManagerViewMode']\n}\n\nexport const history = createBrowserHistory()\n\nconst createRootReducer = (history) =>\n    combineReducers({\n        router: connectRouter(history),\n        howtoReducer: persistReducer(persistConfig, HowTo.howToReducer)\n    })\n\nexport default function configureStore(preloadedState) {\n    // Middlewares\n    const middlewares = [routerMiddleware(history)]\n    const middlewareEnhancer = applyMiddleware(...middlewares)\n\n    // Enhancers\n    const enhancers = [middlewareEnhancer]\n    const composedEnhancers = composeWithDevTools(...enhancers)\n\n    // Reducers\n    const persistedRootReducer = createRootReducer(history)\n\n    // Store & Persistor\n    const store = createStore(\n        persistedRootReducer,\n        preloadedState,\n        composedEnhancers\n    )\n    const persistor = persistStore(store)\n\n    return { store, persistor }\n}\n","// ReactJS\nimport React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\n// Bootstrap\nimport { Col, Navbar, Row } from 'react-bootstrap'\n\n// Fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\n// Styles\nimport './App.scss'\n\n// Components\nimport { CustomNavbar } from './component'\n\n// Pages\nimport { Home, Portfolio, HowTo, About, NotFound } from './page'\n\nimport { history } from './redux/configureStore'\n\nlibrary.add(fab)\nlibrary.add(fas)\nlibrary.add(far)\n\nconst App = () => (\n    <ConnectedRouter history={history}>\n        {/* HEADER */}\n        <header>\n            <CustomNavbar />\n        </header>\n\n        {/* BODY */}\n        <main className='py-4'>\n            <Col md='12'>\n                <Row>\n                    <Switch>\n                        <Redirect\n                            from='/:url*(/+)'\n                            to={history.location.pathname.slice(0, -1)}\n                        />\n                        <Route exact path='/' component={Home} />\n                        <Route path='/portfolio' component={Portfolio} />\n                        <Route path='/howto' component={HowTo} />\n                        <Route path='/about' component={About} />\n                        <Route path='/404' component={NotFound} />\n                        <Redirect to='/404' />\n                    </Switch>\n                </Row>\n            </Col>\n        </main>\n\n        {/* FOOTER */}\n        <footer className='text-white-50'>\n            <Navbar bg='dark'>\n                <Col\n                    md={{\n                        span: 8,\n                        offset: 2\n                    }}\n                >\n                    <Row>\n                        <Col md='12'>\n                            <span>\n                                <FontAwesomeIcon\n                                    icon={faEnvelope}\n                                    className='ml-3'\n                                />\n                            </span>\n                            <span> : info@yazilim.vip</span>\n                        </Col>\n                        <Col md='12'>© yazilim.vip All Rights Reserved</Col>\n                    </Row>\n                </Col>\n            </Navbar>\n        </footer>\n    </ConnectedRouter>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport WebFont from 'webfontloader'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport configureStore from './redux/configureStore'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n)\n\nWebFont.load({\n    google: {\n        families: ['Lato', 'Ubuntu']\n    }\n})\n"],"sourceRoot":""}