{"version":3,"sources":["component/VipIcon.jsx","component/CustomNavbar.jsx","component/Page.jsx","page/Home.jsx","component/PortfolioCard.jsx","constants/projectPortfolioList.jsx","page/Portfolio.jsx","redux/actions.jsx","component/howto/HowToFileManager.jsx","component/howto/HowToBreadcrumb.jsx","model/HowToItemType.jsx","component/howto/HowToBrowser.jsx","util/Firebase.jsx","page/HowTo.jsx","component/PersonCard.jsx","constants/memberList.jsx","page/About.jsx","page/NotFound.jsx","model/SearchItem.jsx","util/HowToUtil.jsx","redux/reducers.jsx","redux/configureStore.jsx","App.jsx","index.js"],"names":["VipIcon","props","href","link","className","iconCode","target","rel","icon","CustomNavbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","alt","src","width","Toggle","aria-controls","Collapse","id","Nav","exact","activeclassname","to","Page","Col","md","span","style","height","Row","children","defaultProps","offset","Home","Card","Body","Title","Text","linkToIcon","linkMap","url","key","PortfolioCard","portfolio","portfolioImageSource","imageSource","portfolioLinks","links","Img","name","Subtitle","title","description","undefined","Footer","Object","entries","map","portfolioList","bitbucket","microsoft","gitlab","portfolioToComponent","p","Portfolio","CardColumns","Content","actionTypes","actionCreators","onApiError","error","type","onApiSuccess","category","path","rootCategory","onSearchResult","query","categoryHits","howtoHits","onToggle","connect","state","howtoReducer","selectedCategory","categoryList","_","extend","subCategoryList","howtoList","folderPath","isHit","isToggleOn","prefix","renderItem","color","ListGroup","Item","xs","sm","lg","size","renderCategories","items","keys","faFolder","renderHowtos","label","faFile","Container","fluid","categoryNames","rootCategorySelectedFlag","getLink","index","slice","join","renderItems","item","Breadcrumb","active","length","linkAs","Link","linkProps","faHome","HOWTO_ITEM_TYPE","HOWTO","CATEGORY","HOWTO_HIT","CATEGORY_HIT","mapDispatchToProps","push","selectedCategoryName","selectedHowto","selectedHowtoName","howtoSelectedFlag","searchIndex","ButtonGroup","toggle","ToggleButton","checked","onChange","faTh","faThList","FormControl","placeholder","aria-label","value","event","hits","filter","o","includes","toLowerCase","forEach","hit","search","overlayClassName","isOpen","source","markdownContent","from","closeIcon","faAngleDown","onRequestClose","Alert","Firebase","firebase","initializeApp","databaseURL","projectId","HowTo","fetchHowtoData","database","ref","on","snapshot","exists","val","data","JSON","parse","history","location","pathname","renderInfoPage","content","this","isLoaded","Spinner","animation","React","Component","cvSource","Button","renderCv","members","teamMemberList","github","medium","linkedin","contributorList","memberToComponent","tm","nd","PersonCard","About","NotFound","data-text","SearchItem","parsePathAndSetContent","split","endsWith","pop","setContent","tmpCategory","shift","cat","hasOwnProperty","createSearchIndex","indexContent","arr","searchItem","subCategory","newPath","action","LOCATION_CHANGE","payload","startsWith","persistConfig","storage","whitelist","createBrowserHistory","library","add","fab","fas","far","App","component","faEnvelope","preloadedState","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","persistedRootReducer","combineReducers","router","connectRouter","persistReducer","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById","WebFont","load","google","families"],"mappings":";kSAkBeA,EAXC,SAACC,GAAD,OACd,yBACEC,KAAMD,EAAME,KACZC,UAAS,mCAA8BH,EAAMI,SAApC,YAAgDJ,EAAMG,YAE/D,uBAAGF,KAAMD,EAAME,KAAMG,OAAO,SAASC,IAAI,uBACvC,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAOP,EAAMI,UAAWD,UAAU,YCmGjDK,EAjGM,WACnB,OACE,kBAACC,EAAA,EAAD,CACEC,kBAAgB,EAChBC,OAAO,KACPC,GAAG,OACHC,QAAQ,OACRV,UAAU,eAEV,yBAAKA,UAAU,sCACb,kBAACM,EAAA,EAAOK,MAAR,CAAcX,UAAU,QACtB,uBAAGF,KAAK,KACN,yBAAKc,IAAI,GAAGC,IAAI,YAAYC,MAAM,WAIxC,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,0BAE7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKnB,UAAU,oBACb,kBAAC,IAAD,CACEoB,OAAK,EACLC,gBAAgB,SAChBrB,UAAU,sBACVsB,GAAG,KAJL,QASA,kBAAC,IAAD,CACED,gBAAgB,SAChBrB,UAAU,sBACVsB,GAAG,cAHL,aAQA,kBAAC,IAAD,CACED,gBAAgB,SAChBrB,UAAU,sBACVsB,GAAG,UAHL,SAQA,kBAAC,IAAD,CACED,gBAAgB,SAChBrB,UAAU,sBACVsB,GAAG,UAHL,UAQF,kBAACH,EAAA,EAAD,KACE,0BAAME,gBAAgB,SAASrB,UAAU,uBACvC,kBAAC,EAAD,CACEC,SAAS,SACTD,UAAU,wCACVD,KAAK,mCAEP,kBAAC,EAAD,CACEE,SAAS,SACTD,UAAU,wCACVD,KAAK,mCAEP,kBAAC,EAAD,CACEE,SAAS,YACTD,UAAU,wCACVD,KAAK,sCAEP,kBAAC,EAAD,CACEE,SAAS,SACTD,UAAU,wCACVD,KAAK,wDAEP,kBAAC,EAAD,CACEE,SAAS,WACTD,UAAU,wCACVD,KAAK,gDAEP,kBAAC,EAAD,CACEE,SAAS,SACTD,UAAU,wCACVD,KAAK,mCAEP,kBAAC,EAAD,CACEE,SAAS,UACTD,UAAU,wCACVD,KAAK,U,SChGbwB,EAAO,SAAC1B,GACZ,OACE,kBAAC2B,EAAA,EAAD,CAAKC,GAAI5B,EAAM6B,KAAMC,MAAO,CAAEC,OAAQ,SACpC,kBAACC,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKC,GAAG,MAAM5B,EAAMiC,aAM5BP,EAAKQ,aAAe,CAClBL,KAAM,CAAEA,KAAM,EAAGM,OAAQ,IAGZT,QCaAU,EAtBF,SAACpC,GAAD,OACX,kBAAC,EAAD,KACE,kBAACqC,EAAA,EAAD,CAAMlC,UAAU,wCACd,yBAAKA,UAAU,2CACf,kBAACkC,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,KACE,wBAAIpC,UAAU,8BAAd,gCAKF,kBAACkC,EAAA,EAAKG,KAAN,qO,SCXFC,EAAa,SAACC,GAClB,IAAMtC,EAAWsC,EAAQ,GACnBC,EAAMD,EAAQ,GAEpB,OACE,uBACEzC,KAAM0C,EACNC,IAAKD,EACLtC,OAAO,QACPF,UAAU,6BAEV,kBAAC,EAAD,CAASC,SAAUA,MA+BVyC,EA1BO,SAAC7C,GACrB,IAAM8C,EAAY9C,EAAM8C,UAClBC,EAAuBD,EAAUE,YACjCC,EAAiBH,EAAUI,MAEjC,OACE,kBAACb,EAAA,EAAD,CAAMlC,UAAU,8BACb4C,GACC,kBAACV,EAAA,EAAKc,IAAN,CAAUtC,QAAQ,MAAMG,IAAG,UAAK+B,KAElC,kBAACV,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,KAAaO,EAAUM,MACvB,kBAACf,EAAA,EAAKgB,SAAN,CAAelD,UAAU,mBACtB2C,EAAUQ,OAEb,kBAACjB,EAAA,EAAKG,KAAN,KAAYM,EAAUS,mBAEJC,IAAnBP,GAAmD,OAAnBA,GAC/B,kBAACZ,EAAA,EAAKoB,OAAN,CAAatD,UAAU,eACpBuD,OAAOC,QAAQV,GAAgBW,IAAInB,MC/CjCoB,EAAgB,CAC3B,CACET,KAAM,cACNG,YACE,+OACFP,YAAa,yBAEf,CACEI,KAAM,gBACNG,YACE,uPACFL,MAAO,CACLY,UAAW,8DACXC,UACE,sGAGN,CACEX,KAAM,YACNG,YACE,mGACFL,MAAO,CACLc,OAAQ,gEAGZ,CACEZ,KAAM,YACNG,YACE,2LACFL,MAAO,CACLc,OAAQ,mECdRC,EAAuB,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAepB,UAAWoB,KAQ/CC,EANG,kBAChB,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KAAcC,EAAsBT,IAAIK,M,sICCtCK,G,OApBe,gBAoBfA,EArBiB,iBAqBjBA,EAnBY,YAmBZA,EAlBY,YAyBZC,EAAiB,CACrBC,WApBiB,SAACC,GAClB,MAAO,CAAEC,KATU,eASUD,UAoB7BE,aAzBmB,SAACC,EAAUC,GAC9B,MAAO,CAAEH,KANY,iBAMUI,aAAcF,EAAUC,SAyBvDE,eAlBqB,SAACC,EAAOC,EAAcC,GAC3C,MAAO,CAAER,KAZO,YAYUM,QAAOC,eAAcC,cAkB/CC,SAfe,WACf,MAAO,CAAET,KAfO,e,2BCiHHU,gBAtBS,SAACC,GACvB,IAAMC,EAAeD,EAAMC,aACrBL,EAAeK,EAAaL,aAC5BC,EAAYI,EAAaJ,UACzBK,EAAmBD,EAAaC,iBAEhCC,EAAeP,EACjBQ,KAAEC,OAAO,GAAIT,GACbM,EAAiBI,gBACfC,EAAYV,EACdO,KAAEC,OAAO,GAAIR,GACbK,EAAiBK,UAErB,MAAO,CACLC,WAAYP,EAAaO,WACzBC,MAAOR,EAAaL,cAAgBK,EAAaJ,UACjDM,aAAcA,EACdI,UAAWA,EACXG,WAAYT,EAAaS,cAIW,KAAzBX,EAvGU,SAAC,GAOnB,IALLS,EAKI,EALJA,WACAC,EAII,EAJJA,MACAN,EAGI,EAHJA,aACAI,EAEI,EAFJA,UACAG,EACI,EADJA,WAEMC,EAASH,EAAa,IACtBI,EAAa,SAAC7C,EAAMlD,EAAMK,EAAM2F,GACpC,OAAIH,EAEA,kBAAC,IAAD,CAAMtE,GAAIvB,EAAMC,UAAU,OAAOyC,IAAK1C,GACpC,kBAACiG,EAAA,EAAUC,KAAX,KACE,kBAAC,IAAD,CAAiB7F,KAAMA,EAAMJ,UAAU,OAAO+F,MAAOA,IACpD9C,IAML,kBAACzB,EAAA,EAAD,CACE0E,GAAI,EACJC,GAAI,EACJ1E,GAAI,EACJ2E,GAAI,EACJpG,UAAU,mBACVyC,IAAK1C,GAEL,kBAAC,IAAD,CAAMuB,GAAIvB,EAAMC,UAAU,QACxB,kBAAC,IAAD,CACEI,KAAMA,EACNJ,UAAU,OACVqG,KAAK,KACLN,MAAOA,IAET,6BACC9C,KAOLqD,EAAmB,SAACC,GAAD,OACvBhD,OAAOiD,KAAKD,GAAO9C,KAAI,SAAChB,GACtB,IAAMQ,EAAesD,EAAM9D,GAAKQ,KAC1BlD,EAAO4F,EAAQY,EAAM9D,GAAKiC,KAAOmB,EAASU,EAAM9D,GAAKQ,KAE3D,OAAO6C,EAAW7C,EAAMlD,EAAM0G,IAAU,eAGtCC,EAAe,SAACH,GAAD,OACnBhD,OAAOiD,KAAKD,GAAO9C,KAAI,SAAChB,GACtB,IAAMQ,EAAO0C,EAAQY,EAAM9D,GAAKQ,KAAOsD,EAAM9D,GAAKkE,MAC5C5G,EAAO4F,EAAQY,EAAM9D,GAAKiC,KAAOmB,EAASU,EAAM9D,GAAKkE,MAE3D,OAAOb,EAAW7C,EAAMlD,EAAM6G,IAAQ,eAqB1C,OAAO,kBAACC,EAAA,EAAD,CAAWC,OAAK,GAjBjBlB,EAEA,kBAACI,EAAA,EAAD,KACGM,EAAiBjB,GACjBqB,EAAajB,IAKhB,kBAAC5D,EAAA,EAAD,KACGyE,EAAiBjB,GACjBqB,EAAajB,Q,UCzBTR,gBATS,SAACC,GACvB,IAAMC,EAAeD,EAAMC,aAE3B,MAAO,CACL4B,cAAe5B,EAAa4B,cAC5BC,yBAA0B7B,EAAa6B,4BAIH,KAAzB/B,EAhDS,SAAC,GAIlB,IAFL8B,EAEI,EAFJA,cACAC,EACI,EADJA,yBAEMC,EAAU,SAACC,GACf,MAAO,UAAYH,EAAcI,MAAM,EAAGD,GAAOE,KAAK,MAGlDC,EAAcN,EAActD,KAAI,SAAC6D,EAAMJ,GAC3C,OACE,kBAACK,GAAA,EAAWtB,KAAZ,CACExD,IAAK6E,EACLE,OAAQN,EAAQ,IAAMH,EAAcU,OACpCC,OAAQC,IACRC,UAAW,CAAEtG,GAAI2F,EAAQC,EAAQ,GAAIlH,UAAW,SAE/CsH,MAKP,OACE,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWtB,KAAZ,CACExD,IAAI,OACJ+E,OAAQR,EACRU,OAAQC,IACRC,UAAW,CAAEtG,GAAI,SAAUtB,UAAW,SAEtC,8BACE,kBAAC,IAAD,CAAiBI,KAAMyH,QAI1BR,MCxCQS,GAPS,CACtBC,MAAO,QACPC,SAAU,WACVC,UAAW,YACXC,aAAc,gBC4LVC,GAAkB,2BAAQ/D,GAAR,IAAwBgE,WAEjCnD,gBApBS,SAACC,GACvB,IAAMC,EAAeD,EAAMC,aAE3B,MAAO,CACLO,WAAYP,EAAaO,WACzBN,iBAAkBD,EAAaC,iBAC/BiD,qBAAsBlD,EAAakD,qBACnCC,cAAenD,EAAamD,cAC5BC,kBAAmBpD,EAAaoD,kBAChCC,kBAAmBrD,EAAaqD,kBAChC3D,MAAOM,EAAaN,MACpBC,aAAcK,EAAaL,aAC3BC,UAAWI,EAAaJ,UACxB0D,YAAatD,EAAasD,YAC1B7C,WAAYT,EAAaS,cAMWuC,GAAzBlD,EA9JM,SAAC,GAgBf,IAdLS,EAcI,EAdJA,WACAN,EAaI,EAbJA,iBACAiD,EAYI,EAZJA,qBACAC,EAWI,EAXJA,cACAC,EAUI,EAVJA,kBACAC,EASI,EATJA,kBACAC,EAQI,EARJA,YACA5D,EAOI,EAPJA,MACAe,EAMI,EANJA,WAGAhB,EAGI,EAHJA,eACAI,EAEI,EAFJA,SACAoD,EACI,EADJA,KAwHA,OA/DOhD,EASH,6BACE,kBAACvD,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,GAAD,OAGF,kBAACD,EAAA,EAAD,CAAKC,GAAG,IAAI0E,GAAG,IAAInG,UAAU,gBAC3B,kBAAC0I,EAAA,EAAD,CAAaC,QAAM,EAAC3I,UAAU,eAC5B,kBAAC4I,EAAA,EAAD,CACErE,KAAK,QACL7D,QAAQ,YACRuC,KAAK,QACL4F,SAAUjD,EACVkD,SAAU,kBAAM9D,MAEhB,kBAAC,IAAD,CAAiB5E,KAAM2I,OAGzB,kBAACH,EAAA,EAAD,CACErE,KAAK,QACL7D,QAAQ,YACRuC,KAAK,QACL4F,QAASjD,EACTkD,SAAU,kBAAM9D,MAEhB,kBAAC,IAAD,CAAiB5E,KAAM4I,SAK7B,kBAACxH,EAAA,EAAD,CAAKC,GAAG,IAAI0E,GAAG,KAKb,kBAAC8C,EAAA,EAAD,CACE1E,KAAK,SACL2E,YAAY,YACZC,aAAW,SACXC,MAAOvE,EACPiE,SAAU,SAACO,GAAD,OAxGP,SAACxE,GACd,IAAKA,EACH,OAAOD,EAAe,GAAI,KAAM,MAGlC,IAAM0E,EAAOb,EAAYc,QAAO,SAACC,GAAD,OAAOA,EAAEvG,KAAKwG,SAAS5E,EAAM6E,kBAE7D,GAAIJ,EAAM,CACR,IAAMxE,EAAe,GACfC,EAAY,GAElBuE,EAAKK,SAAQ,SAACC,GACRA,EAAIrF,OAASuD,GAAgBI,aAC/BpD,EAAasD,KAAKwB,GACTA,EAAIrF,OAASuD,GAAgBG,WACtClD,EAAUqD,KAAKwB,MAInBhF,EAAeC,EAAOC,EAAcC,QAEpCH,EAAeC,EAAO,KAAM,MAmFCgF,CAAOR,EAAMnJ,OAAOkJ,YAK/C,6BAEA,kBAAC,GAAD,MArFAd,EAEA,kBAAC,IAAD,CACEtI,UAAU,qBACV8J,iBAAiB,6BACjBC,OAAQvB,EACR1G,SAAU,kBAAC,IAAD,CAAekI,OAAQ1B,EAAc2B,kBAC/C9G,MAAOmF,EAAc3B,MACrB7F,MAAM,MACNoJ,KAAK,SACLC,UAAW,kBAAC,IAAD,CAAiB/J,KAAMgK,IAAa/D,KAAK,OACpDgE,eAAgB,WACdjC,EAAK1C,MAMT8C,EAEA,kBAAC8B,EAAA,EAAD,CAAO7H,IAAK,EAAG/B,QAAQ,UACrB,2BAAI6H,GADN,iBAC0C,2BAAInD,EAAiBnC,MAAU,IADzE,gBAFJ,GAaI,kBAACqH,EAAA,EAAD,CAAO7H,IAAK,EAAG/B,QAAQ,UAAvB,YACW,2BAAI2H,GADf,0B,oBC7FOkC,I,OAFEC,KAASC,cALb,CACXC,YAAa,oCACbC,UAAW,gBCIPC,G,4MASJC,eAAiB,WACfN,GAASO,WACNC,IAAI,aACJC,GACC,SACA,SAACC,GACC,GAAIA,EAASC,SAAU,CACrB,IAAMC,EAAMF,EAASE,MACfC,EAAOC,KAAKC,MAAMH,GAClBzG,EAAO,EAAK7E,MAAM0L,QAAQC,SAASC,SAEzC,EAAK5L,MAAM2E,aAAa4G,EAAM1G,QAE9B,EAAK7E,MAAMwE,WAAW,0CAG1B,SAACC,GACC,EAAKzE,MAAMwE,WAAWC,O,EAK9BoH,eAAiB,SAACC,GAChB,OACE,kBAAC,EAAD,KACE,yBAAK3L,UAAU,yBACb,yBAAKA,UAAU,qBAAqB2L,M,kEAjCjBC,KAAK/L,MAAtB8E,cAGNiH,KAAKf,mB,+BAoCC,IAAD,EACqBe,KAAK/L,MAAzByE,EADD,EACCA,MAER,OAHO,EACQuH,SAMXvH,EACKsH,KAAKF,eACV,kBAACpB,EAAA,EAAD,CAAO7H,IAAK,EAAG/B,QAAQ,UACpB4D,IAML,kBAAC,EAAD,CAAM5C,KAAM,CAAEA,KAAM,KAClB,kBAAC,GAAD,OAbKkK,KAAKF,eAAe,kBAACI,EAAA,EAAD,CAASC,UAAU,gB,GA7ChCC,IAAMC,WA0EpB9D,GAAqB/D,EAEZa,gBAZS,SAACC,GACvB,IAAMC,EAAeD,EAAMC,aAE3B,MAAO,CACLb,MAAOa,EAAab,MACpBuH,SAAU1G,EAAa0G,SACvBlH,aAAcQ,EAAaR,gBAMSwD,GAAzBlD,CAA6C2F,I,SC9EtDtI,GAAa,SAACC,GAClB,IAAMtC,EAAWsC,EAAQ,GACnBC,EAAMD,EAAQ,GAEpB,OACE,uBACEzC,KAAM0C,EACNC,IAAKD,EACLtC,OAAO,QACPF,UAAU,6BAEV,kBAAC,EAAD,CAASC,SAAUA,MAoEVyC,GA5CO,SAAC7C,GACrB,IAAM8C,EAAY9C,EAAM8C,UAClBG,EAAiBH,EAAUI,MAC3BmJ,EAAWvJ,EAAUuJ,SAE3B,OACE,kBAAChK,EAAA,EAAD,CAAMlC,UAAU,yBACb2C,EAAUE,aACT,kBAACX,EAAA,EAAKc,IAAN,CACEhD,UAAU,uCACV2B,MAAO,CACLb,MAAO,OAETJ,QAAQ,MACRG,IAAG,UAAK8B,EAAUE,eAItB,kBAACX,EAAA,EAAKC,KAAN,KACE,yBAAKnC,UAAU,oBACb,kBAACkC,EAAA,EAAKE,MAAN,KAAaO,EAAUM,MACvB,kBAACf,EAAA,EAAKgB,SAAN,CAAelD,UAAU,cACtBH,EAAM8C,UAAUQ,QAIrB,yBAAKjC,GAAG,yBACN,kBAACgB,EAAA,EAAKG,KAAN,CAAWrC,UAAU,mBAClB2C,EAAUS,cAId8I,EAnDQ,SAACA,GAChB,OACE,yBAAKlM,UAAU,eACb,6BAEA,kBAACmM,GAAA,EAAD,CACEnM,UAAU,UACVU,QAAQ,kBACRZ,KAAMoM,EACNhM,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CAAiBC,KAAMwG,IAAQ5G,UAAU,SAP3C,qBA8CcoM,CAASF,GAAY,WAGf7I,IAAnBP,GAAmD,OAAnBA,GAC/B,kBAACZ,EAAA,EAAKoB,OAAN,CAAatD,UAAU,eACpBuD,OAAOC,QAAQV,GAAgBW,IAAInB,OCpFjC+J,GAAU,CACrBC,eAAgB,CACd,CACErJ,KAAM,uBACNG,YACE,oCACE,4BACE,4HAIA,uIAIA,iFAEF,6BACA,uBACEpD,UAAU,sBACVF,KAAK,2EACLI,OAAO,SACPC,IAAI,uBAEJ,wCAIN0C,YAAa,kCACbM,MAAO,oBACPJ,MAAO,CACLc,OAAQ,6BACR0I,OAAQ,+BACRC,OAAQ,gCACRC,SAAU,0CAId,CACExJ,KAAM,cACNG,YACE,6BACE,qDACA,4BACE,qFACA,uEAINP,YAAa,kBAEbM,MAAO,qBAGT,CACEF,KAAM,sBACNE,MAAO,oBACPC,YACE,oCACE,4BACE,kLAKA,8HAONP,YAAa,iBACbqJ,SAAU,+BACVnJ,MAAO,CACLc,OAAQ,gCACR0I,OAAQ,gCACRC,OAAQ,iCACRC,SAAU,mDAKhBC,gBAAiB,ICrEbC,GAAoB,SAACC,GAAD,OACxB,kBAACpL,EAAA,EAAD,CAAKiB,IAAKmK,EAAG3J,KAAMmD,GAAI,CAAE1E,KAAM,GAAKmL,GAAI,CAAEnL,KAAM,KAC9C,kBAACoL,GAAD,CAAYnK,UAAWiK,MAqBZG,GAjBD,WACZ,IAAMT,EAAiBpI,GAAgBoI,eACjCI,EAAkBxI,GAAgBwI,gBACxC,OACE,kBAAC,EAAD,KACE,kBAAC7K,EAAA,EAAD,KAAMyK,EAAe7I,IAAIkJ,KAEG,IAA3BD,EAAgBjF,QACf,oCACE,6BACA,kBAAC5F,EAAA,EAAD,KAAM6K,EAAgBjJ,IAAIkJ,QCbrBK,GAZE,kBACf,kBAAC,EAAD,KACE,yBAAKhN,UAAU,yBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,SAASiN,YAAU,aAAlC,iB,0ECXFC,GACJ,WAAYxI,EAAMH,EAAMtB,GAAO,oBAC7B2I,KAAKlH,KAAOA,EACZkH,KAAKrH,KAAOA,EACZqH,KAAK3I,KAAOA,GCiCVkK,GAAyB,SAACxI,EAAcD,GAC5C,IAAMsC,EAAoC,WAATtC,EAC3BqC,EAAgBrC,EAAKyC,MAAM,GAAGiG,MAAM,KACpC5E,EAAoB9D,EAAK2I,SAAS,WAAa3I,EAAK2I,SAAS,OAC7D9E,EAAoBC,EAAoBzB,EAAcuG,MAAQ,KAC9DjF,EAAuBtB,EAAcA,EAAcU,OAAS,GAC5D/B,EAAa,IAAMqB,EAAcK,KAAK,KAE5C,OAAO,aACL1B,WAAYA,EACZqB,cAAeA,EACfsB,qBAAsBA,EACtBE,kBAAmBA,EACnBC,kBAAmBA,EACnBxB,yBAA0BA,GACvBuG,GAAW5I,EAAcoC,EAAewB,KAIzCgF,GAAa,SAAC5I,EAAcoC,EAAewB,GAE/C,IAAIiF,EAAc7I,EAElBoC,EAAc0G,QAJuD,qBAKnD1G,GALmD,IAKrE,2BAAiC,CAAC,IAAvB2G,EAAsB,QAC/B,IAAKF,EAAYhI,gBAAgBkI,GAAM,CACrCF,EAAc,KACd,MAGFA,EAAcA,EAAYhI,gBAAgBkI,IAXyB,8BAcrE,IAAMtI,EAAmBoI,EAGrBlF,EAAgB,KAYpB,OATEC,GACAnD,GAGAA,EAAiBK,UAAUkI,eAAepF,KAE1CD,EAAgBlD,EAAiBK,UAAU8C,IAGtC,CACLnD,iBAAkBA,EAClBkD,cAAeA,EACfxD,aAAc,KACdC,UAAW,OAIT6I,GAAoB,SAACjJ,GACzB,OAAOkJ,GAAalJ,EAAc,GAAI,WAGlCkJ,GAAe,SAAfA,EAAgBzC,EAAM0C,EAAKpJ,GAC/B,IAAMe,EAAY2F,EAAK3F,UACjBD,EAAkB4F,EAAK5F,gBAgC7B,OA9BAjC,OAAOiD,KAAKf,GAAWkE,SAAQ,SAAClH,GAC9B,IACMQ,EADQwC,EAAUhD,GACLkE,MAGboH,EAAa,IAAIb,GAFPxI,EAAO,IAAMzB,EAI3B6E,GAAgBG,UAChBhF,EAAKyG,eAGPoE,EAAI1F,KAAK2F,MAGXxK,OAAOiD,KAAKhB,GAAiBmE,SAAQ,SAAClH,GACpC,IAAMuL,EAAcxI,EAAgB/C,GAC9BQ,EAAO+K,EAAY/K,KACnBgL,EAAUvJ,EAAO,IAAMzB,EAEvB8K,EAAa,IAAIb,GACrBe,EACAnG,GAAgBI,aAChBjF,EAAKyG,eAGPoE,EAAI1F,KAAK2F,GAETF,EAAaG,EAAaF,EAAKG,MAG1BH,GClEM3I,GAtDM,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIgJ,EAAW,uCAC3C,OAAQA,EAAO3J,MACb,KAAK4J,IAGH,IAAMzJ,EAAOwJ,EAAOE,QAAQ5C,SAASC,SACrC,OAAI/G,EAAK2J,WAAW,WAAanJ,EAAMP,aAC9B,uCACFO,GACAiI,GAAuBjI,EAAMP,aAAcD,IAFhD,IAGEG,MAAO,KAGF,eACFK,GAIT,KAAKf,EACH,OAAO,uCACFe,GADL,IAEEP,aAAcuJ,EAAOvJ,aACrBkH,UAAU,GACPsB,GAAuBe,EAAOvJ,aAAcuJ,EAAOxJ,OAJxD,IAKE+D,YAAamF,GAAkBM,EAAOvJ,cACtCE,MAAO,KAGX,KAAKV,EACH,OAAO,2BACFe,GADL,IAEEZ,MAAO4J,EAAO5J,MACduH,UAAU,IAGd,KAAK1H,EACH,OAAO,2BACFe,GADL,IAEEL,MAAOqJ,EAAOrJ,MACdC,aAAcoJ,EAAOpJ,aACrBC,UAAWmJ,EAAOnJ,YAGtB,KAAKZ,EACH,OAAO,2BACFe,GADL,IAEEU,YAAaV,EAAMU,aAGvB,QACE,OAAOV,IC9CPoJ,GAAgB,CACpB7L,IAAK,OACL8L,aACAC,UAAW,CAAC,eAGDjD,GAAUkD,eCgBvBC,IAAQC,IAAIC,KACZF,IAAQC,IAAIE,KACZH,IAAQC,IAAIG,KAEZ,IAmDeC,GAnDH,kBACV,kBAAC,IAAD,CAAiBxD,QAASA,IAExB,gCACE,kBAAC,EAAD,OAIF,0BAAMvL,UAAU,QACd,kBAACwB,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACI,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEqI,KAAK,aACL5I,GAAIiK,GAAQC,SAASC,SAAStE,MAAM,GAAI,KAE1C,kBAAC,IAAD,CAAO/F,OAAK,EAACsD,KAAK,IAAIsK,UAAW/M,IACjC,kBAAC,IAAD,CAAOyC,KAAK,aAAasK,UAAWhL,IACpC,kBAAC,IAAD,CAAOU,KAAK,SAASsK,UAAWpE,KAChC,kBAAC,IAAD,CAAOlG,KAAK,SAASsK,UAAWjC,KAChC,kBAAC,IAAD,CAAOrI,KAAK,OAAOsK,UAAWhC,KAC9B,kBAAC,IAAD,CAAU1L,GAAG,aAOrB,4BAAQtB,UAAU,iBAChB,kBAACM,EAAA,EAAD,CAAQG,GAAG,QACT,kBAACe,EAAA,EAAD,CACEC,GAAI,CACFC,KAAM,EACNM,OAAQ,IAGV,kBAACH,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAKC,GAAG,MACN,8BACE,kBAAC,IAAD,CAAiBrB,KAAM6O,IAAYjP,UAAU,UAE/C,sDAEF,kBAACwB,EAAA,EAAD,CAAKC,GAAG,MAAR,8C,yCDvDG,SAAwByN,GAErC,IARyB3D,EAQnB4D,EAAc,CAACC,aAAiB7D,KAIhC8D,EAAY,CAHSC,mBAAe,WAAf,EAAmBH,IAIxCI,EAAoBC,uBAAmB,WAAnB,EAAuBH,GAG3CI,GAhBmBlE,EAgBsBA,GAf/CmE,2BAAgB,CACdC,OAAQC,YAAcrE,GACtBpG,aAAc0K,aAAevB,GAAenJ,OAgBxC2K,EAAQC,uBACZN,EACAP,EACAK,GAIF,MAAO,CAAEO,QAAOE,UAFEC,aAAaH,IErCJI,GAArBJ,G,GAAAA,MAAOE,G,GAAAA,UAEfG,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,KAAD,CAAaO,QAAS,KAAML,UAAWA,IACrC,kBAAC,GAAD,QAGJM,SAASC,eAAe,SAG1BC,KAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,OAAQ,c","file":"static/js/main.bf7ba81d.chunk.js","sourcesContent":["import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst VipIcon = (props) => (\n  <div\n    href={props.link}\n    className={`d-inline-block yvip-icon ${props.iconCode} ${props.className}`}\n  >\n    <a href={props.link} target='_blank' rel='noopener noreferrer'>\n      <FontAwesomeIcon icon={['fab', props.iconCode]} className='mr-3' />\n    </a>\n  </div>\n)\n\nexport default VipIcon\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\n\n// Project Components\nimport VipIcon from './VipIcon'\n\nconst CustomNavbar = () => {\n  return (\n    <Navbar\n      collapseOnSelect\n      expand='lg'\n      bg='dark'\n      variant='dark'\n      className='text-center'\n    >\n      <div className='animate__animated animate__flipInX'>\n        <Navbar.Brand className='my-2'>\n          <a href='/'>\n            <img alt='' src='/logo.svg' width='220' />\n          </a>\n        </Navbar.Brand>\n      </div>\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\n      <Navbar.Collapse id='responsive-navbar-nav'>\n        <Nav className='mx-auto page-nav'>\n          <NavLink\n            exact\n            activeclassname='active'\n            className='text-light nav-link'\n            to='/'\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            activeclassname='active'\n            className='text-light nav-link'\n            to='/portfolio'\n          >\n            Portfolio\n          </NavLink>\n\n          <NavLink\n            activeclassname='active'\n            className='text-light nav-link'\n            to='/howto'\n          >\n            HowTo\n          </NavLink>\n\n          <NavLink\n            activeclassname='active'\n            className='text-light nav-link'\n            to='/about'\n          >\n            About\n          </NavLink>\n        </Nav>\n        <Nav>\n          <span activeclassname='active' className='text-light nav-link'>\n            <VipIcon\n              iconCode='gitlab'\n              className='animate__animated animate__zoomInLeft'\n              link='https://gitlab.com/yazilim.vip'\n            />\n            <VipIcon\n              iconCode='github'\n              className='animate__animated animate__zoomInLeft'\n              link='https://github.com/yazilim-vip'\n            />\n            <VipIcon\n              iconCode='bitbucket'\n              className='animate__animated animate__zoomInLeft'\n              link='https://bitbucket.org/yazilimvip/'\n            />\n            <VipIcon\n              iconCode='docker'\n              className='animate__animated animate__zoomInLeft'\n              link='https://hub.docker.com/orgs/yazilimvip/repositories'\n            />\n            <VipIcon\n              iconCode='linkedin'\n              className='animate__animated animate__zoomInLeft'\n              link='https://www.linkedin.com/company/yazilimvip'\n            />\n            <VipIcon\n              iconCode='medium'\n              className='animate__animated animate__zoomInLeft'\n              link='https://medium.com/yazilim-vip'\n            />\n            <VipIcon\n              iconCode='discord'\n              className='animate__animated animate__zoomInLeft'\n              link=''\n            />\n          </span>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default CustomNavbar\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Col, Row } from 'react-bootstrap'\n\nconst Page = (props) => {\n  return (\n    <Col md={props.span} style={{ height: '100%' }}>\n      <Row>\n        <Col md='12'>{props.children}</Col>\n      </Row>\n    </Col>\n  )\n}\n\nPage.defaultProps = {\n  span: { span: 8, offset: 2 }\n}\n\nexport default Page\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport Page from '../component/Page'\n\nconst Home = (props) => (\n  <Page>\n    <Card className='mb-4 portfolio-card shadow yvip-card'>\n      <div className='yvip-card-img img-responsive img-fluid' />\n      <Card.Body>\n        <Card.Title>\n          <h1 className='text-center display-4 pb-2'>\n            Do the right, not the easy.\n          </h1>\n        </Card.Title>\n\n        <Card.Text>\n          To keep this platform open to everyone who is competent and willing to\n          share what we call an open source world. A platform aimed at\n          presenting our competencies to the open source world without waiting\n          for a response.\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  </Page>\n)\n\nexport default Home\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport VipIcon from './VipIcon'\n\nconst linkToIcon = (linkMap) => {\n  const iconCode = linkMap[0]\n  const url = linkMap[1]\n\n  return (\n    <a\n      href={url}\n      key={url}\n      target='blank'\n      className='text-muted portfolio-link'\n    >\n      <VipIcon iconCode={iconCode} />\n    </a>\n  )\n}\n\nconst PortfolioCard = (props) => {\n  const portfolio = props.portfolio\n  const portfolioImageSource = portfolio.imageSource\n  const portfolioLinks = portfolio.links\n\n  return (\n    <Card className='mb-4 portfolio-card shadow'>\n      {portfolioImageSource && (\n        <Card.Img variant='top' src={`${portfolioImageSource}`} />\n      )}\n      <Card.Body>\n        <Card.Title>{portfolio.name}</Card.Title>\n        <Card.Subtitle className='mb-4 text-muted'>\n          {portfolio.title}\n        </Card.Subtitle>\n        <Card.Text>{portfolio.description}</Card.Text>\n      </Card.Body>\n      {portfolioLinks !== undefined && portfolioLinks !== null && (\n        <Card.Footer className='text-center'>\n          {Object.entries(portfolioLinks).map(linkToIcon)}\n        </Card.Footer>\n      )}\n    </Card>\n  )\n}\n\nexport default PortfolioCard\n","export const portfolioList = [\n  {\n    name: 'Play2Gether',\n    description:\n      'The Play2Gether app is a music listening platform to listen to Spotify with your friends or other people. Listen to the same song at the same time with other people, queue and vote the songs, chat together, discover and share new music!',\n    imageSource: '/img/project-p2g.jpeg'\n  },\n  {\n    name: 'TimeCountdown',\n    description:\n      'A visual studio code extension and this extension takes care of the time countdown tasks. It is very easy to use, just type the time to count down in an allowed format, and the application will count down the given time by 1 sec in an interval.',\n    links: {\n      bitbucket: 'https://bitbucket.org/yazilimvip/time-countdown/src/master/',\n      microsoft:\n        'https://marketplace.visualstudio.com/items?itemName=yazilim-vip.time-countdown&ssr=false#overview'\n    }\n  },\n  {\n    name: 'maescript',\n    description:\n      'Contains useful functions with autocomplete feauteres and comes with useful set of shell scripts',\n    links: {\n      gitlab: 'https://gitlab.com/yazilim.vip/projects/maescript/maescript'\n    }\n  },\n  {\n    name: 'SpringVIP',\n    description:\n      'A Java Spring Library that provides helpful generic and utility classes. Some of features provided by library are generic CRUD Service and Rest controllers. See more from documentation',\n    links: {\n      gitlab: 'https://gitlab.com/yazilim.vip/projects/spring-vip/spring-vip'\n    }\n  }\n]\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { CardColumns } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport Page from '../component/Page'\nimport PortfolioCard from '../component/PortfolioCard'\n\n// constants\nimport * as Content from '../constants/projectPortfolioList'\n\nconst portfolioToComponent = (p) => <PortfolioCard portfolio={p} />\n\nconst Portfolio = () => (\n  <Page>\n    <CardColumns>{Content.portfolioList.map(portfolioToComponent)}</CardColumns>\n  </Page>\n)\n\nexport default Portfolio\n","const ON_API_SUCCESS = 'ON_API_SUCCESS'\nconst ON_API_ERROR = 'ON_API_ERROR'\nconst ON_SEARCH = 'ON_SEARCH'\nconst ON_TOGGLE = 'ON_TOGGLE'\n\nconst onApiSuccess = (category, path) => {\n  return { type: ON_API_SUCCESS, rootCategory: category, path }\n}\n\nconst onApiError = (error) => {\n  return { type: ON_API_ERROR, error }\n}\n\nconst onSearchResult = (query, categoryHits, howtoHits) => {\n  return { type: ON_SEARCH, query, categoryHits, howtoHits }\n}\n\nconst onToggle = () => {\n  return { type: ON_TOGGLE }\n}\n\nconst actionTypes = {\n  ON_API_ERROR,\n  ON_API_SUCCESS,\n  ON_SEARCH,\n  ON_TOGGLE\n}\n\nconst actionCreators = {\n  onApiError,\n  onApiSuccess,\n  onSearchResult,\n  onToggle\n}\n\nexport { actionTypes, actionCreators }\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap'\nimport _ from 'underscore'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolder } from '@fortawesome/free-solid-svg-icons'\nimport { faFile } from '@fortawesome/free-regular-svg-icons'\n\nconst HowToFileManager = ({\n  // values from mapStateToProps\n  folderPath,\n  isHit,\n  categoryList,\n  howtoList,\n  isToggleOn\n}) => {\n  const prefix = folderPath + '/'\n  const renderItem = (name, link, icon, color) => {\n    if (isToggleOn) {\n      return (\n        <Link to={link} className='link' key={link}>\n          <ListGroup.Item>\n            <FontAwesomeIcon icon={icon} className='mr-3' color={color} />\n            {name}\n          </ListGroup.Item>\n        </Link>\n      )\n    } else {\n      return (\n        <Col\n          xs={4}\n          sm={3}\n          md={3}\n          lg={2}\n          className='py-4 text-center'\n          key={link}\n        >\n          <Link to={link} className='link'>\n            <FontAwesomeIcon\n              icon={icon}\n              className='pb-1'\n              size='4x'\n              color={color}\n            />\n            <br />\n            {name}\n          </Link>\n        </Col>\n      )\n    }\n  }\n\n  const renderCategories = (items) =>\n    Object.keys(items).map((key) => {\n      const name = isHit ? items[key].name : items[key].name\n      const link = isHit ? items[key].path : prefix + items[key].name\n\n      return renderItem(name, link, faFolder, '#50a4d4')\n    })\n\n  const renderHowtos = (items) =>\n    Object.keys(items).map((key) => {\n      const name = isHit ? items[key].name : items[key].label\n      const link = isHit ? items[key].path : prefix + items[key].label\n\n      return renderItem(name, link, faFile, '#494d52')\n    })\n\n  const renderByToggle = () => {\n    if (isToggleOn) {\n      return (\n        <ListGroup>\n          {renderCategories(categoryList)}\n          {renderHowtos(howtoList)}\n        </ListGroup>\n      )\n    } else {\n      return (\n        <Row>\n          {renderCategories(categoryList)}\n          {renderHowtos(howtoList)}\n        </Row>\n      )\n    }\n  }\n\n  return <Container fluid>{renderByToggle()}</Container>\n}\n\nconst mapStateToProps = (state) => {\n  const howtoReducer = state.howtoReducer\n  const categoryHits = howtoReducer.categoryHits\n  const howtoHits = howtoReducer.howtoHits\n  const selectedCategory = howtoReducer.selectedCategory\n\n  const categoryList = categoryHits\n    ? _.extend({}, categoryHits)\n    : selectedCategory.subCategoryList\n  const howtoList = howtoHits\n    ? _.extend({}, howtoHits)\n    : selectedCategory.howtoList\n\n  return {\n    folderPath: howtoReducer.folderPath,\n    isHit: howtoReducer.categoryHits || howtoReducer.howtoHits,\n    categoryList: categoryList,\n    howtoList: howtoList,\n    isToggleOn: howtoReducer.isToggleOn\n  }\n}\n\nexport default connect(mapStateToProps, null)(HowToFileManager)\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\n\n\nconst HowToBreadcrumb = ({\n  // values from mapStateToProps\n  categoryNames,\n  rootCategorySelectedFlag\n}) => {\n  const getLink = (index) => {\n    return '/howto/' + categoryNames.slice(0, index).join('/')\n  }\n\n  const renderItems = categoryNames.map((item, index) => {\n    return (\n      <Breadcrumb.Item\n        key={item}\n        active={index + 1 === categoryNames.length}\n        linkAs={Link}\n        linkProps={{ to: getLink(index + 1), className: 'link' }}\n      >\n        {item}\n      </Breadcrumb.Item>\n    )\n  })\n\n  return (\n    <Breadcrumb>\n      <Breadcrumb.Item\n        key='root'\n        active={rootCategorySelectedFlag}\n        linkAs={Link}\n        linkProps={{ to: '/howto', className: 'link' }}\n      >\n        <span>\n          <FontAwesomeIcon icon={faHome} />\n        </span>\n      </Breadcrumb.Item>\n\n      {renderItems}\n    </Breadcrumb>\n  )\n}\nconst mapStateToProps = (state) => {\n  const howtoReducer = state.howtoReducer\n\n  return {\n    categoryNames: howtoReducer.categoryNames,\n    rootCategorySelectedFlag: howtoReducer.rootCategorySelectedFlag\n  }\n}\n\nexport default connect(mapStateToProps, null)(HowToBreadcrumb)\n","const HOWTO_ITEM_TYPE = {\n  HOWTO: 'howto',\n  CATEGORY: 'category',\n  HOWTO_HIT: 'howto_hit',\n  CATEGORY_HIT: 'category_hit'\n}\n\nexport default HOWTO_ITEM_TYPE\n","// ReactJS Core\nimport React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { push } from 'connected-react-router'\nimport { connect } from 'react-redux'\nimport {\n  Col,\n  Row,\n  Alert,\n  FormControl,\n  ButtonGroup,\n  ToggleButton\n} from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\nimport SlidingPane from 'react-sliding-pane'\nimport 'react-sliding-pane/dist/react-sliding-pane.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown, faTh, faThList } from '@fortawesome/free-solid-svg-icons'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { actionCreators } from '../../redux/actions'\n\n// Project Components\nimport HowToFileManager from './HowToFileManager'\nimport HowToBreadcrumb from './HowToBreadcrumb'\n\n// Constants\nimport HOWTO_ITEM_TYPE from '../../model/HowToItemType'\n\n\nconst HowToBrowser = ({\n  // values from mapStateToProps\n  folderPath,\n  selectedCategory,\n  selectedCategoryName,\n  selectedHowto,\n  selectedHowtoName,\n  howtoSelectedFlag,\n  searchIndex,\n  query,\n  isToggleOn,\n\n  // methods from props\n  onSearchResult,\n  onToggle,\n  push\n}) => {\n  const search = (query) => {\n    if (!query) {\n      return onSearchResult('', null, null)\n    }\n\n    const hits = searchIndex.filter((o) => o.name.includes(query.toLowerCase()))\n\n    if (hits) {\n      const categoryHits = []\n      const howtoHits = []\n\n      hits.forEach((hit) => {\n        if (hit.type === HOWTO_ITEM_TYPE.CATEGORY_HIT) {\n          categoryHits.push(hit)\n        } else if (hit.type === HOWTO_ITEM_TYPE.HOWTO_HIT) {\n          howtoHits.push(hit)\n        }\n      })\n\n      onSearchResult(query, categoryHits, howtoHits)\n    } else {\n      onSearchResult(query, null, null)\n    }\n  }\n\n  const renderHowtoContentElement = () => {\n    if (selectedHowto) {\n      return (\n        <SlidingPane\n          className='howto-sliding-pane'\n          overlayClassName='howto-sliding-pane-overlay'\n          isOpen={howtoSelectedFlag}\n          children={<ReactMarkdown source={selectedHowto.markdownContent} />}\n          title={selectedHowto.label}\n          width='100'\n          from='bottom'\n          closeIcon={<FontAwesomeIcon icon={faAngleDown} size='2x' />}\n          onRequestClose={() => {\n            push(folderPath)\n          }}\n        />\n      )\n    }\n\n    if (howtoSelectedFlag) {\n      return (\n        <Alert key={1} variant='danger'>\n          <b>{selectedHowtoName}</b> not found in <b>{selectedCategory.name}</b>{' '}\n          folder.\n        </Alert>\n      )\n    }\n  }\n\n  const renderMainContentElement = () => {\n    if (!selectedCategory) {\n      return (\n        <Alert key={1} variant='danger'>\n          Category <b>{selectedCategoryName}</b> not found in path.\n        </Alert>\n      )\n    }\n\n    return (\n      <div>\n        <Row>\n          <Col md='7'>\n            <HowToBreadcrumb />\n          </Col>\n\n          <Col md='2' sm='3' className='mb-2 mb-sm-0'>\n            <ButtonGroup toggle className='float-right'>\n              <ToggleButton\n                type='radio'\n                variant='secondary'\n                name='radio'\n                checked={!isToggleOn}\n                onChange={() => onToggle()}\n              >\n                <FontAwesomeIcon icon={faTh} />\n              </ToggleButton>\n\n              <ToggleButton\n                type='radio'\n                variant='secondary'\n                name='radio'\n                checked={isToggleOn}\n                onChange={() => onToggle()}\n              >\n                <FontAwesomeIcon icon={faThList} />\n              </ToggleButton>\n            </ButtonGroup>\n          </Col>\n\n          <Col md='3' sm='9'>\n            {/* <div className=\"mr-3 mt-2 align-items-center\">\n\t\t\t\t\t\t\t<Switch />\n\t\t\t\t\t\t</div> */}\n\n            <FormControl\n              type='search'\n              placeholder='Search...'\n              aria-label='Search'\n              value={query}\n              onChange={(event) => search(event.target.value)}\n            />\n          </Col>\n        </Row>\n\n        <hr />\n\n        <HowToFileManager />\n\n        {renderHowtoContentElement()}\n      </div>\n    )\n  }\n\n  return renderMainContentElement()\n}\n\nconst mapStateToProps = (state) => {\n  const howtoReducer = state.howtoReducer\n\n  return {\n    folderPath: howtoReducer.folderPath,\n    selectedCategory: howtoReducer.selectedCategory,\n    selectedCategoryName: howtoReducer.selectedCategoryName,\n    selectedHowto: howtoReducer.selectedHowto,\n    selectedHowtoName: howtoReducer.selectedHowtoName,\n    howtoSelectedFlag: howtoReducer.howtoSelectedFlag,\n    query: howtoReducer.query,\n    categoryHits: howtoReducer.categoryHits,\n    howtoHits: howtoReducer.howtoHits,\n    searchIndex: howtoReducer.searchIndex,\n    isToggleOn: howtoReducer.isToggleOn\n  }\n}\n\nconst mapDispatchToProps = { ...actionCreators, push }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HowToBrowser)\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app'\n\n// Add the Firebase services that you want to use\nimport 'firebase/database'\n\nvar config = {\n  databaseURL: 'https://yvip-howto.firebaseio.com',\n  projectId: 'yvip-howto'\n}\n\nconst Firebase = firebase.initializeApp(config)\n\nexport default Firebase\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { connect } from 'react-redux'\nimport { Alert, Spinner } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport Page from '../component/Page'\nimport HowToBrowser from '../component/howto/HowToBrowser'\nimport Firebase from '../util/Firebase'\nimport { actionCreators } from '../redux/actions'\n\nclass HowTo extends React.Component {\n  componentDidMount() {\n    const { rootCategory } = this.props\n\n    if (!rootCategory) {\n      this.fetchHowtoData()\n    }\n  }\n\n  fetchHowtoData = () => {\n    Firebase.database()\n      .ref('howto-dev')\n      .on(\n        'value',\n        (snapshot) => {\n          if (snapshot.exists()) {\n            const val = snapshot.val()\n            const data = JSON.parse(val)\n            const path = this.props.history.location.pathname\n\n            this.props.onApiSuccess(data, path)\n          } else {\n            this.props.onApiError('Snapshot can not found on firebase.')\n          }\n        },\n        (error) => {\n          this.props.onApiError(error)\n        }\n      )\n  }\n\n  renderInfoPage = (content) => {\n    return (\n      <Page>\n        <div className='row h-100 text-center'>\n          <div className='col-sm-12 my-auto'>{content}</div>\n        </div>\n      </Page>\n    )\n  }\n\n  render() {\n    const { error, isLoaded } = this.props\n\n    if (!isLoaded) {\n      return this.renderInfoPage(<Spinner animation='border' />)\n    }\n\n    if (error) {\n      return this.renderInfoPage(\n        <Alert key={1} variant='danger'>\n          {error}\n        </Alert>\n      )\n    }\n\n    return (\n      <Page span={{ span: 12 }}>\n        <HowToBrowser />\n      </Page>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const howtoReducer = state.howtoReducer\n\n  return {\n    error: howtoReducer.error,\n    isLoaded: howtoReducer.isLoaded,\n    rootCategory: howtoReducer.rootCategory\n  }\n}\n\nconst mapDispatchToProps = actionCreators\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HowTo)\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Button, Card } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport VipIcon from './VipIcon'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFile } from '@fortawesome/free-solid-svg-icons'\n\nconst linkToIcon = (linkMap) => {\n  const iconCode = linkMap[0]\n  const url = linkMap[1]\n\n  return (\n    <a\n      href={url}\n      key={url}\n      target='blank'\n      className='text-muted portfolio-link'\n    >\n      <VipIcon iconCode={iconCode} />\n    </a>\n  )\n}\n\nconst renderCv = (cvSource) => {\n  return (\n    <div className='text-center'>\n      <hr />\n\n      <Button\n        className='d-block'\n        variant='outline-primary'\n        href={cvSource}\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        <FontAwesomeIcon icon={faFile} className='mr-3' />\n        Curriculum Vitae\n      </Button>\n    </div>\n  )\n}\n\nconst PortfolioCard = (props) => {\n  const portfolio = props.portfolio\n  const portfolioLinks = portfolio.links\n  const cvSource = portfolio.cvSource\n\n  return (\n    <Card className='portfolio-card shadow'>\n      {portfolio.imageSource && (\n        <Card.Img\n          className='mx-auto mt-2 border border-secondary'\n          style={{\n            width: '70%'\n          }}\n          variant='top'\n          src={`${portfolio.imageSource}`}\n        />\n      )}\n\n      <Card.Body>\n        <div className='text-center mb-3'>\n          <Card.Title>{portfolio.name}</Card.Title>\n          <Card.Subtitle className='text-muted'>\n            {props.portfolio.title}\n          </Card.Subtitle>\n        </div>\n\n        <div id='example-collapse-text'>\n          <Card.Text className='border-top pt-3'>\n            {portfolio.description}\n          </Card.Text>\n        </div>\n\n        {cvSource ? renderCv(cvSource) : null}\n      </Card.Body>\n\n      {portfolioLinks !== undefined && portfolioLinks !== null && (\n        <Card.Footer className='text-center'>\n          {Object.entries(portfolioLinks).map(linkToIcon)}\n        </Card.Footer>\n      )}\n    </Card>\n  )\n}\n\nexport default PortfolioCard\n","import React from 'react'\n\nexport const members = {\n  teamMemberList: [\n    {\n      name: 'Mehmet Arif Emre Sen',\n      description: (\n        <>\n          <ul>\n            <li>\n              I am an entrepreneur who wants to learn new technologies and use\n              them to make things easier.\n            </li>\n            <li>\n              My life goal is having my own job and creating a software\n              community that everyone can get benefit from.\n            </li>\n            <li>I have deep interest to Object Oriented Paradigm</li>\n          </ul>\n          <hr />\n          <a\n            className='d-block text-center'\n            href='https://maemresen.github.io/curriculum-vitae/cv_mehmet_arif_emre_sen.pdf'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <b>CV Link</b>\n          </a>\n        </>\n      ),\n      imageSource: '/img/emre_portrait_cropped.jpeg',\n      title: 'Major Contributor',\n      links: {\n        gitlab: 'https://gitlab.com/emresen',\n        github: 'https://github.com/maemresen',\n        medium: 'https://medium.com/@maemresen',\n        linkedin: 'https://www.linkedin.com/in/maemresen'\n      }\n    },\n\n    {\n      name: 'Burak Erkan',\n      description: (\n        <div>\n          <span>yazilim.vip patriot</span>\n          <ul>\n            <li>2008 - now (software developer & team lead & manager)</li>\n            <li>2000 - now (still a software amateur)</li>\n          </ul>\n        </div>\n      ),\n      imageSource: '/img/burak.jpeg',\n      // cvSource: \"/cv/burak.pdf\",\n      title: 'Major Contributor'\n    },\n\n    {\n      name: 'Mustafa Arif Sisman',\n      title: 'Major Contributor',\n      description: (\n        <>\n          <ul>\n            <li>\n              I aim to achieve the most automated and optimized result possible,\n              following the principles of agile software development and\n              analytical thinking.\n            </li>\n            <li>\n              I work in the field of artificial intelligence and web\n              technologies, I am an active learner.\n            </li>\n          </ul>\n        </>\n      ),\n      imageSource: '/img/arif.jpeg',\n      cvSource: 'https://arifsisman.github.io',\n      links: {\n        gitlab: 'https://gitlab.com/arifsisman',\n        github: 'https://github.com/arifsisman',\n        medium: 'https://medium.com/@arifsisman',\n        linkedin: 'https://www.linkedin.com/in/mustafaarifsisman'\n      }\n    }\n  ],\n\n  contributorList: []\n}\n","import React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Row, Col } from 'react-bootstrap'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport Page from '../component/Page'\nimport PersonCard from '../component/PersonCard'\n\n// Constants\nimport * as Content from '../constants/memberList'\n\nconst memberToComponent = (tm) => (\n  <Col key={tm.name} lg={{ span: 4 }} nd={{ span: 12 }}>\n    <PersonCard portfolio={tm} />\n  </Col>\n)\n\nconst About = () => {\n  const teamMemberList = Content.members.teamMemberList\n  const contributorList = Content.members.contributorList\n  return (\n    <Page>\n      <Row>{teamMemberList.map(memberToComponent)}</Row>\n\n      {contributorList.length !== 0 && (\n        <>\n          <hr />\n          <Row>{contributorList.map(memberToComponent)}</Row>\n        </>\n      )}\n    </Page>\n  )\n}\n\nexport default About\n","import React from 'react'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport Page from '../component/Page'\n\nconst NotFound = () => (\n  <Page>\n    <div className='row h-100 text-center'>\n      <div className='col-sm-12 my-auto'>\n        <div className='glitch' data-text='NOT FOUND'>\n          NOT FOUND\n        </div>\n      </div>\n    </div>\n  </Page>\n)\n\nexport default NotFound\n","class SearchItem {\n  constructor(path, type, name) {\n    this.path = path\n    this.type = type\n    this.name = name\n  }\n}\n\nexport { SearchItem }\n","// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { SearchItem } from '../model/SearchItem'\nimport HOWTO_ITEM_TYPE from '../model/HowToItemType'\n\n/**\n *\n * Example1\n * url: https://www.yazilim.vip/howto\n * path = \"/howto\"\n * categoryNames = []\n * folderPath = \"howto\"\n * selectedCategoryName = \"howto\"\n *\n * Example2\n * url: https://www.yazilim.vip/howto/linux\n * path = \"linux\"\n * categoryNames = [\"linux\"]\n * folderPath = \"howto/linux\"\n * selectedCategoryName = \"linux\"\n *\n * Example3\n * url: https://www.yazilim.vip/howto/linux/specific_distro\n * path = \"/howto/linux/specific_distro\"\n * categoryNames = [\"linux\", \"specific_distro\"]\n * folderPath = \"howto/linux/specific_distro\"\n * selectedCategoryName = \"specific_distro\"\n *\n * Example4\n * url: http://www.yazilim.vip/howto/ide/Eclipse/eclipse-shortcuts_configuration.howto\n * path = \"/howto/ide/Eclipse/eclipse-shortcuts_configuration.howto\"\n * categoryNames = [\"ide, \"Eclipse\"]\n * folderPath = \"howto/ide/Eclipse\"\n * selectedCategoryName = \"Eclipse\"\n * selectedHowtoName = \"eclipse-shortcuts_configuration.howto\"\n */\nconst parsePathAndSetContent = (rootCategory, path) => {\n  const rootCategorySelectedFlag = path === '/howto'\n  const categoryNames = path.slice(1).split('/')\n  const howtoSelectedFlag = path.endsWith('.howto') || path.endsWith('.md')\n  const selectedHowtoName = howtoSelectedFlag ? categoryNames.pop() : null\n  const selectedCategoryName = categoryNames[categoryNames.length - 1]\n  const folderPath = '/' + categoryNames.join('/')\n\n  return {\n    folderPath: folderPath,\n    categoryNames: categoryNames,\n    selectedCategoryName: selectedCategoryName,\n    selectedHowtoName: selectedHowtoName,\n    howtoSelectedFlag: howtoSelectedFlag,\n    rootCategorySelectedFlag: rootCategorySelectedFlag,\n    ...setContent(rootCategory, categoryNames, selectedHowtoName)\n  }\n}\n\nconst setContent = (rootCategory, categoryNames, selectedHowtoName) => {\n  // set selectedCategory\n  let tmpCategory = rootCategory\n\n  categoryNames.shift() // shift first category (howto), because rootCategory is not wrapped with \"howto\" key\n  for (const cat of categoryNames) {\n    if (!tmpCategory.subCategoryList[cat]) {\n      tmpCategory = null\n      break /// category not exists\n    }\n\n    tmpCategory = tmpCategory.subCategoryList[cat]\n  }\n\n  const selectedCategory = tmpCategory\n\n  // set selectedHowto\n  let selectedHowto = null\n\n  if (\n    selectedHowtoName &&\n    selectedCategory &&\n    //! eslint gives error\n    // eslint-disable-next-line no-prototype-builtins\n    selectedCategory.howtoList.hasOwnProperty(selectedHowtoName)\n  ) {\n    selectedHowto = selectedCategory.howtoList[selectedHowtoName]\n  }\n\n  return {\n    selectedCategory: selectedCategory,\n    selectedHowto: selectedHowto,\n    categoryHits: null,\n    howtoHits: null\n  }\n}\n\nconst createSearchIndex = (rootCategory) => {\n  return indexContent(rootCategory, [], '/howto')\n}\n\nconst indexContent = (data, arr, path) => {\n  const howtoList = data.howtoList\n  const subCategoryList = data.subCategoryList\n\n  Object.keys(howtoList).forEach((key) => {\n    const howto = howtoList[key]\n    const name = howto.label\n    const newPath = path + '/' + name\n\n    const searchItem = new SearchItem(\n      newPath,\n      HOWTO_ITEM_TYPE.HOWTO_HIT,\n      name.toLowerCase()\n    )\n\n    arr.push(searchItem)\n  })\n\n  Object.keys(subCategoryList).forEach((key) => {\n    const subCategory = subCategoryList[key]\n    const name = subCategory.name\n    const newPath = path + '/' + name\n\n    const searchItem = new SearchItem(\n      newPath,\n      HOWTO_ITEM_TYPE.CATEGORY_HIT,\n      name.toLowerCase()\n    )\n\n    arr.push(searchItem)\n\n    indexContent(subCategory, arr, newPath)\n  })\n\n  return arr\n}\n\nexport { parsePathAndSetContent, createSearchIndex }\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { LOCATION_CHANGE } from 'connected-react-router'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport { actionTypes } from './actions'\nimport { parsePathAndSetContent, createSearchIndex } from '../util/HowToUtil'\n\nconst howtoReducer = (state = [], action) => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      //! eslint gives error\n      // eslint-disable-next-line no-case-declarations\n      const path = action.payload.location.pathname\n      if (path.startsWith('/howto') && state.rootCategory) {\n        return {\n          ...state,\n          ...parsePathAndSetContent(state.rootCategory, path),\n          query: ''\n        }\n      } else {\n        return {\n          ...state\n        }\n      }\n\n    case actionTypes.ON_API_SUCCESS:\n      return {\n        ...state,\n        rootCategory: action.rootCategory,\n        isLoaded: true,\n        ...parsePathAndSetContent(action.rootCategory, action.path),\n        searchIndex: createSearchIndex(action.rootCategory),\n        query: ''\n      }\n\n    case actionTypes.ON_API_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        isLoaded: true\n      }\n\n    case actionTypes.ON_SEARCH:\n      return {\n        ...state,\n        query: action.query,\n        categoryHits: action.categoryHits,\n        howtoHits: action.howtoHits\n      }\n\n    case actionTypes.ON_TOGGLE:\n      return {\n        ...state,\n        isToggleOn: !state.isToggleOn\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default howtoReducer\n","// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { createBrowserHistory } from 'history'\nimport { applyMiddleware, createStore, combineReducers } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\nimport howtoReducer from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['isToggleOn']\n}\n\nexport const history = createBrowserHistory()\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    howtoReducer: persistReducer(persistConfig, howtoReducer)\n  })\n\nexport default function configureStore(preloadedState) {\n  // Middlewares\n  const middlewares = [routerMiddleware(history)]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  // Enhancers\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  // Reducers\n  const persistedRootReducer = createRootReducer(history)\n\n  // Store & Persistor\n  const store = createStore(\n    persistedRootReducer,\n    preloadedState,\n    composedEnhancers\n  )\n  const persistor = persistStore(store)\n\n  return { store, persistor }\n}\n","// ReactJS\nimport React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\n// Bootstrap\nimport { Col, Navbar, Row } from 'react-bootstrap'\n\n// Fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// ---------------------------\n//  Internal Dependencies\n// ---------------------------\n// Styles\nimport './style/App.scss'\n\n// Components\nimport CustomNavbar from './component/CustomNavbar'\n\n// Pages\nimport Home from './page/Home'\nimport Portfolio from './page/Portfolio'\nimport HowTo from './page/HowTo'\nimport About from './page/About'\nimport NotFound from './page/NotFound'\n\nimport { history } from './redux/configureStore'\n\nlibrary.add(fab)\nlibrary.add(fas)\nlibrary.add(far)\n\nconst App = () => (\n  <ConnectedRouter history={history}>\n    {/* HEADER */}\n    <header>\n      <CustomNavbar />\n    </header>\n\n    {/* BODY */}\n    <main className='py-4'>\n      <Col md='12'>\n        <Row>\n          <Switch>\n            <Redirect\n              from='/:url*(/+)'\n              to={history.location.pathname.slice(0, -1)}\n            />\n            <Route exact path='/' component={Home} />\n            <Route path='/portfolio' component={Portfolio} />\n            <Route path='/howto' component={HowTo} />\n            <Route path='/about' component={About} />\n            <Route path='/404' component={NotFound} />\n            <Redirect to='/404' />\n          </Switch>\n        </Row>\n      </Col>\n    </main>\n\n    {/* FOOTER */}\n    <footer className='text-white-50'>\n      <Navbar bg='dark'>\n        <Col\n          md={{\n            span: 8,\n            offset: 2\n          }}\n        >\n          <Row>\n            <Col md='12'>\n              <span>\n                <FontAwesomeIcon icon={faEnvelope} className='ml-3' />\n              </span>\n              <span> : info@yazilim.vip</span>\n            </Col>\n            <Col md='12'>© yazilim.vip All Rights Reserved</Col>\n          </Row>\n        </Col>\n      </Navbar>\n    </footer>\n  </ConnectedRouter>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport WebFont from 'webfontloader'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport configureStore from './redux/configureStore'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\nWebFont.load({\n  google: {\n    families: ['Lato', 'Ubuntu']\n  }\n})\n"],"sourceRoot":""}